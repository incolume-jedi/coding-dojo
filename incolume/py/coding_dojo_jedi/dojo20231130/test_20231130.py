"""Test dojo20231130."""

import pytest

from incolume.py.coding_dojo_jedi.dojo20231130.dojo20231130 import (
    boyermoore_0,
    boyermoore_1,
)


@pytest.mark.parametrize(
    'entrance expected'.split(),
    [
        (
            (
                'algoritmo',
                'Os algoritmos de ordenação, são algoritmos eficazes.',
            ),
            3,
        ),
        (('THIS', 'THIS IS A TEST TEXT'), 0),
        (('AABA', 'AABAACAADAABAABA'), 0),
        (('1234', '012342798123468791251234'), 1),
        (('AABAACAADAABAABA', 'AABA'), -1),
        (
            (
                '1234',
                'AUGUAUCCUUCCAUCAAGGAAACCAUGCGCGUUCAGCUUUCUAU'
                'GGAGGGUAGUGUUAACUACCACGCCUUCAAGUGCACUGGAAAAG'
                'GAGAGGGAAAACCAUACGAAGGCACCCAAAGCCUGAAUAUUACA'
                'AUAACUGAAGGAGGUCCUCUGCCAUUUGCUUUUGACAUUCUGUC'
                'ACACGCCUUUCAGUAUGGCAUCAAGGUCUUCGCCAAGUACCCCA'
                'AAGAAAUUCCUGACUUCUUUAAGCAGUCUCUACCUGGUGGUUUU'
                'UCUUGGGAAAGAGUAAGCACCUAUGAAGAUGGAGGAGUGCUUUC'
                'AGCUACCCAAGAAACAAGUUUGCAGGGUGAUUGCAUCAUCUGCA'
                'AAGUUAAAGUCCUUGGCACCAAUUUUCCCGCAAACGGUCCAGUG'
                'AUGCAAAAGAAGACCUGUGGAUGGGAGCCAUCAACUGAAACAGU'
                'CAUCCCACGAGAUGGUGGACUUCUGCUUCGCGAUACCCCCGCAC'
                'UUAUGCUGGCUGACGGAGGUCAUCUUUCUUGCUUCAUGGAAACA'
                'ACUUACAAGUCGAAGAAAGAGGUAAAGCUUCCAGAACUUCACUU'
                'UCAUCAUUUGCGUAUGGAAAAGCUGAACAUAAGUGACGAUUGGA'
                'AGACCGUUGAGCAGCACGAGUCUGUGGUGGCUAGCUACUCCCAA'
                'MYPSIKETMRVQLSMEGSVNYHAFKCTGKGEGKPYEGTQSLNIT'
                'ITEGGPLPFAFDILSHAFQYGIKVFAKYPKEIPDFFKQSLPGGF'
                'SWERVSTYEDGGVLSATQETSLQGDCIICKVKVLGTNFPANGPV'
                'MQKKTCGWEPSTETVIPRDGGLLLRDTPALMLADGGHLSCFMET'
                'TYKSKKEVKLPELHFHHLRMEKLNISDDWKTVEQHESVVASYSQ'
                'VPSKLGHNGUGCCUUCGAAAUUAGGACAUAACUGA',
            ),
            -1,
        ),
        (
            (
                'CUGA',
                'AUGUAUCCUUCCAUCAAGGAAACCAUGCGCGUUCAGCUUUCUAU'
                'GGAGGGUAGUGUUAACUACCACGCCUUCAAGUGCACUGGAAAAG'
                'GAGAGGGAAAACCAUACGAAGGCACCCAAAGCCUGAAUAUUACA'
                'AUAACUGAAGGAGGUCCUCUGCCAUUUGCUUUUGACAUUCUGUC'
                'ACACGCCUUUCAGUAUGGCAUCAAGGUCUUCGCCAAGUACCCCA'
                'AAGAAAUUCCUGACUUCUUUAAGCAGUCUCUACCUGGUGGUUUU'
                'UCUUGGGAAAGAGUAAGCACCUAUGAAGAUGGAGGAGUGCUUUC'
                'AGCUACCCAAGAAACAAGUUUGCAGGGUGAUUGCAUCAUCUGCA'
                'AAGUUAAAGUCCUUGGCACCAAUUUUCCCGCAAACGGUCCAGUG'
                'AUGCAAAAGAAGACCUGUGGAUGGGAGCCAUCAACUGAAACAGU'
                'CAUCCCACGAGAUGGUGGACUUCUGCUUCGCGAUACCCCCGCAC'
                'UUAUGCUGGCUGACGGAGGUCAUCUUUCUUGCUUCAUGGAAACA'
                'ACUUACAAGUCGAAGAAAGAGGUAAAGCUUCCAGAACUUCACUU'
                'UCAUCAUUUGCGUAUGGAAAAGCUGAACAUAAGUGACGAUUGGA'
                'AGACCGUUGAGCAGCACGAGUCUGUGGUGGCUAGCUACUCCCAA'
                'MYPSIKETMRVQLSMEGSVNYHAFKCTGKGEGKPYEGTQSLNIT'
                'ITEGGPLPFAFDILSHAFQYGIKVFAKYPKEIPDFFKQSLPGGF'
                'SWERVSTYEDGGVLSATQETSLQGDCIICKVKVLGTNFPANGPV'
                'MQKKTCGWEPSTETVIPRDGGLLLRDTPALMLADGGHLSCFMET'
                'TYKSKKEVKLPELHFHHLRMEKLNISDDWKTVEQHESVVASYSQ'
                'VPSKLGHNGUGCCUUCGAAAUUAGGACAUAACUGA',
            ),
            120,
        ),
    ],
)
def test_boyermoore_0(entrance, expected) -> None:
    """Test boyer moore."""
    assert boyermoore_0(*entrance) == expected


@pytest.mark.parametrize(
    'entrance expected'.split(),
    [
        (
            (
                'algoritmo',
                'Os algoritmos de ordenação, são algoritmos eficazes.',
            ),
            {'algoritmo': [3, 32]},
        ),
        (('THIS', 'THIS IS A TEST TEXT'), {'THIS': [0]}),
        (('AABA', 'AABAACAADAABAABA'), {'AABA': [0, 9, 12]}),
        (('1234', '012342798123468791251234'), {'1234': [1, 9, 20]}),
        (('AABAACAADAABAABA', 'AABA'), {'AABAACAADAABAABA': []}),
        (
            (
                '1234',
                'AUGUAUCCUUCCAUCAAGGAAACCAUGCGCGUUCAGCUUUCUAU'
                'GGAGGGUAGUGUUAACUACCACGCCUUCAAGUGCACUGGAAAAG'
                'GAGAGGGAAAACCAUACGAAGGCACCCAAAGCCUGAAUAUUACA'
                'AUAACUGAAGGAGGUCCUCUGCCAUUUGCUUUUGACAUUCUGUC'
                'ACACGCCUUUCAGUAUGGCAUCAAGGUCUUCGCCAAGUACCCCA'
                'AAGAAAUUCCUGACUUCUUUAAGCAGUCUCUACCUGGUGGUUUU'
                'UCUUGGGAAAGAGUAAGCACCUAUGAAGAUGGAGGAGUGCUUUC'
                'AGCUACCCAAGAAACAAGUUUGCAGGGUGAUUGCAUCAUCUGCA'
                'AAGUUAAAGUCCUUGGCACCAAUUUUCCCGCAAACGGUCCAGUG'
                'AUGCAAAAGAAGACCUGUGGAUGGGAGCCAUCAACUGAAACAGU'
                'CAUCCCACGAGAUGGUGGACUUCUGCUUCGCGAUACCCCCGCAC'
                'UUAUGCUGGCUGACGGAGGUCAUCUUUCUUGCUUCAUGGAAACA'
                'ACUUACAAGUCGAAGAAAGAGGUAAAGCUUCCAGAACUUCACUU'
                'UCAUCAUUUGCGUAUGGAAAAGCUGAACAUAAGUGACGAUUGGA'
                'AGACCGUUGAGCAGCACGAGUCUGUGGUGGCUAGCUACUCCCAA'
                'MYPSIKETMRVQLSMEGSVNYHAFKCTGKGEGKPYEGTQSLNIT'
                'ITEGGPLPFAFDILSHAFQYGIKVFAKYPKEIPDFFKQSLPGGF'
                'SWERVSTYEDGGVLSATQETSLQGDCIICKVKVLGTNFPANGPV'
                'MQKKTCGWEPSTETVIPRDGGLLLRDTPALMLADGGHLSCFMET'
                'TYKSKKEVKLPELHFHHLRMEKLNISDDWKTVEQHESVVASYSQ'
                'VPSKLGHNGUGCCUUCGAAAUUAGGACAUAACUGA',
            ),
            {'1234': []},
        ),
        (
            (
                'CUGA',
                'AUGUAUCCUUCCAUCAAGGAAACCAUGCGCGUUCAGCUUUCUAU'
                'GGAGGGUAGUGUUAACUACCACGCCUUCAAGUGCACUGGAAAAG'
                'GAGAGGGAAAACCAUACGAAGGCACCCAAAGCAUGAAUAUUACA'
                'AUAAAUGAAGGAGGUCCUCUGCCAUUUGCUUUUGACAUUCUGUC'
                'ACACGCCUUUCAGUAUGGCAUCAAGGUCUUCGCCAAGUACCCCA'
                'AAGAAAUUCAUGACUUCUUUAAGCAGUCUCUACCUGGUGGUUUU'
                'UCUUGGGAAAGAGUAAGCACCUAUGAAGAUGGAGGAGUGCUUUC'
                'AGCUACCCAAGAAACAAGUUUGCAGGGUGAUUGCAUCAUCUGCA'
                'AAGUUAAAGUCCUUGGCACCAAUUUUCCCGCAAACGGUCCAGUG'
                'AUGCAAAAGAAGACCUGUGGAUGGGAGCCAUCAAAUGAAACAGU'
                'CAUCCCACGAGAUGGUGGACUUCUGCUUCGCGAUACCCCCGCAC'
                'UUAUGCUGGAUGACGGAGGUCAUCUUUCUUGCUUCAUGGAAACA'
                'ACUUACAAGUCGAAGAAAGAGGUAAAGCUUCCAGAACUUCACUU'
                'UCAUCAUUUGCGUAUGGAAAAGAUGAACAUAAGUGACGAUUGGA'
                'AGACCGUUGAGCAGCACGAGUCUGUGGUGGCUAGCUACUCCCAA'
                'MYPSIKETMRVQLSMEGSVNYHAFKCTGKGEGKPYEGTQSLNIT'
                'ITEGGPLPFAFDILSHAFQYGIKVFAKYPKEIPDFFKQSLPGGF'
                'SWERVSTYEDGGVLSATQETSLQGDCIICKVKVLGTNFPANGPV'
                'MQKKTCGWEPSTETVIPRDGGLLLRDTPALMLADGGHLSCFMET'
                'TYKSKKEVKLPELHFHHLRMEKLNISDDWKTVEQHESVVASYSQ'
                'VPSKLGHNGUGCCUUCGAAAUUAGGACAUAACUGA',
            ),
            {'CUGA': [911]},
        ),
    ],
)
def test_boyermoore_1(entrance, expected) -> None:
    """Test boyer moore."""
    assert boyermoore_1(*entrance) == expected
