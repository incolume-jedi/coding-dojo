{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"coding-dojo Aqui \u00e9 mantido um reposit\u00f3rio com as solu\u00e7\u00f5es que trabalhamos no dojo de codifica\u00e7\u00e3o da Guilda Jedi no discord Os c\u00f3digos est\u00e3o organizados em diret\u00f3rios, sendo que cada diret\u00f3rio representa um dia do dojo, formado por incolume/py/dojoYYYYMMDD , de forma que o primeiro dojo estar\u00e1 no topo, e o ultimo na base. Os c\u00f3digos est\u00e3o em python, desde a vers\u00e3o 3.8 ao 3.12+ e tem como depend\u00eancia principal o pytest. Mas para facilitar a instala\u00e7\u00e3o o poetry foi escolhido para gerenciador de depend\u00eancias, apenas execute pip install poetry && poetry install na raiz do diret\u00f3rio, no mesmo n\u00edvel do arquivo pyproject.toml Finalmente, para rodar os testes nos c\u00f3digos, carregue o shell poetry shell , mude para o diret\u00f3rio do Dojo, por exemplo 20220701, cd incolume/py/dojo20220701 , e digite pytest . Ou simplesmente no diret\u00f3rio principal digite poetry run pytest incolume/py/20220701 . Mais detalhes sobre os coding-dojo O que \u00e9? A ideia de um Coding Dojo \u00e9 treinar a resolu\u00e7\u00e3o de problemas, desenvolvimento orientado a testes (TDD), programa\u00e7\u00e3o em par, comunica\u00e7\u00e3o com outras pessoas e uma linguagem de programa\u00e7\u00e3o atrav\u00e9s de exerc\u00edcios pr\u00e1ticos. Para mais informa\u00e7\u00f5es sobre os nossos coding dojos anteriores acesse os respectivos diret\u00f3rios dos dojos e leia o REAME.md. Alguns detalhes N\u00e3o \u00e9 competivivo, mas sim colaborativo. Vamos nos juntar para resolver o problema. Todos os n\u00edveis s\u00e3o bem-vindos. Somos encorajados a tentar novas ideias, sair da caixa. A ideia \u00e9 treinar Quem pode participar? Todos s\u00e3o convidados a participar, n\u00e3o existe n\u00edvel inicial, a ideia \u00e9 aprender com a troca de ideias e experi\u00eancias. Se voc\u00ea n\u00e3o se sentir confort\u00e1vel em participar programando, est\u00e1 convidado a participar como um membro da plat\u00e9ia para ver a mec\u00e2nica do coding dojo e poder programar no futuro. Portanto, mesmo que voc\u00ea n\u00e3o conhe\u00e7a python, pode vir para aprender conceitos da linguagem. Como conduzir? Gerenciamento do tempo N\u00e3o exceder o tempo m\u00e1ximo de 120' (2h); Finalizar o dojo entre 100' e 120'; Com o problema finalizado o dojo pode ser encerrado a qualquer momento; Se o tempo for insuficiente para solu\u00e7\u00e3o do problema proposto, fracione-o em etapas, finalize a primeira etapa, encerre o dojo, e continue a etapa seguinte no proximo dojo; Uma descri\u00e7\u00e3o de como conduzir o dojo (no maximo 2h): 10 minutos para montar a estrutura e apresentar/discutir alguns problemas que podemos resolver (at\u00e9 3 problemas s\u00e3o suficientes); 5 minutos para decidir sobre qual problema vamos resolver; 10 minutos para uma revis\u00e3o de python (opcional); 40 minutos de programa\u00e7\u00e3o; 5 minutos intervalo para ver o andamento da solu\u00e7\u00e3o; 40 minutos de programa\u00e7\u00e3o; 10 minutos de revis\u00e3o sobre o que aprendemos e o que podemos melhorar no pr\u00f3ximo dojo; Sobre o per\u00edodo de programa\u00e7\u00e3o Um programador pilota; Um programador co-pilota; A plat\u00e9ia assite e d\u00e1 dicas (importante: a plat\u00e9ia s\u00f3 pode se manifestar se os testes estiverem ok, caso contr\u00e1rio, apenas piloto e co-piloto); Ap\u00f3s cinco minutos trocam as posi\u00e7\u00f5es: piloto -> co-piloto, co-piloto -> plat\u00e9ia, plat\u00e9ia -> piloto; A ideia \u00e9 que todos tenham uma chance de programar ao menos uma vez; Toda a comunica\u00e7\u00e3o entre o piloto e copiloto deve ser em voz alta para que todos escutem; Salvaguarda do aprendizado Sempre salve as solu\u00e7\u00f5es no fork do dojo; Solicite um pull request (PR) para consolidar a solu\u00e7\u00e3o;","title":"coding-dojo"},{"location":"#coding-dojo","text":"Aqui \u00e9 mantido um reposit\u00f3rio com as solu\u00e7\u00f5es que trabalhamos no dojo de codifica\u00e7\u00e3o da Guilda Jedi no discord Os c\u00f3digos est\u00e3o organizados em diret\u00f3rios, sendo que cada diret\u00f3rio representa um dia do dojo, formado por incolume/py/dojoYYYYMMDD , de forma que o primeiro dojo estar\u00e1 no topo, e o ultimo na base. Os c\u00f3digos est\u00e3o em python, desde a vers\u00e3o 3.8 ao 3.12+ e tem como depend\u00eancia principal o pytest. Mas para facilitar a instala\u00e7\u00e3o o poetry foi escolhido para gerenciador de depend\u00eancias, apenas execute pip install poetry && poetry install na raiz do diret\u00f3rio, no mesmo n\u00edvel do arquivo pyproject.toml Finalmente, para rodar os testes nos c\u00f3digos, carregue o shell poetry shell , mude para o diret\u00f3rio do Dojo, por exemplo 20220701, cd incolume/py/dojo20220701 , e digite pytest . Ou simplesmente no diret\u00f3rio principal digite poetry run pytest incolume/py/20220701 . Mais detalhes sobre os coding-dojo","title":"coding-dojo"},{"location":"#o-que-e","text":"A ideia de um Coding Dojo \u00e9 treinar a resolu\u00e7\u00e3o de problemas, desenvolvimento orientado a testes (TDD), programa\u00e7\u00e3o em par, comunica\u00e7\u00e3o com outras pessoas e uma linguagem de programa\u00e7\u00e3o atrav\u00e9s de exerc\u00edcios pr\u00e1ticos. Para mais informa\u00e7\u00f5es sobre os nossos coding dojos anteriores acesse os respectivos diret\u00f3rios dos dojos e leia o REAME.md.","title":"O que \u00e9?"},{"location":"#alguns-detalhes","text":"N\u00e3o \u00e9 competivivo, mas sim colaborativo. Vamos nos juntar para resolver o problema. Todos os n\u00edveis s\u00e3o bem-vindos. Somos encorajados a tentar novas ideias, sair da caixa. A ideia \u00e9 treinar","title":"Alguns detalhes"},{"location":"#quem-pode-participar","text":"Todos s\u00e3o convidados a participar, n\u00e3o existe n\u00edvel inicial, a ideia \u00e9 aprender com a troca de ideias e experi\u00eancias. Se voc\u00ea n\u00e3o se sentir confort\u00e1vel em participar programando, est\u00e1 convidado a participar como um membro da plat\u00e9ia para ver a mec\u00e2nica do coding dojo e poder programar no futuro. Portanto, mesmo que voc\u00ea n\u00e3o conhe\u00e7a python, pode vir para aprender conceitos da linguagem.","title":"Quem pode participar?"},{"location":"#como-conduzir","text":"","title":"Como conduzir?"},{"location":"#gerenciamento-do-tempo","text":"N\u00e3o exceder o tempo m\u00e1ximo de 120' (2h); Finalizar o dojo entre 100' e 120'; Com o problema finalizado o dojo pode ser encerrado a qualquer momento; Se o tempo for insuficiente para solu\u00e7\u00e3o do problema proposto, fracione-o em etapas, finalize a primeira etapa, encerre o dojo, e continue a etapa seguinte no proximo dojo;","title":"Gerenciamento do tempo"},{"location":"#uma-descricao-de-como-conduzir-o-dojo-no-maximo-2h","text":"10 minutos para montar a estrutura e apresentar/discutir alguns problemas que podemos resolver (at\u00e9 3 problemas s\u00e3o suficientes); 5 minutos para decidir sobre qual problema vamos resolver; 10 minutos para uma revis\u00e3o de python (opcional); 40 minutos de programa\u00e7\u00e3o; 5 minutos intervalo para ver o andamento da solu\u00e7\u00e3o; 40 minutos de programa\u00e7\u00e3o; 10 minutos de revis\u00e3o sobre o que aprendemos e o que podemos melhorar no pr\u00f3ximo dojo;","title":"Uma descri\u00e7\u00e3o de como conduzir o dojo (no maximo 2h):"},{"location":"#sobre-o-periodo-de-programacao","text":"Um programador pilota; Um programador co-pilota; A plat\u00e9ia assite e d\u00e1 dicas (importante: a plat\u00e9ia s\u00f3 pode se manifestar se os testes estiverem ok, caso contr\u00e1rio, apenas piloto e co-piloto); Ap\u00f3s cinco minutos trocam as posi\u00e7\u00f5es: piloto -> co-piloto, co-piloto -> plat\u00e9ia, plat\u00e9ia -> piloto; A ideia \u00e9 que todos tenham uma chance de programar ao menos uma vez; Toda a comunica\u00e7\u00e3o entre o piloto e copiloto deve ser em voz alta para que todos escutem;","title":"Sobre o per\u00edodo de programa\u00e7\u00e3o"},{"location":"#salvaguarda-do-aprendizado","text":"Sempre salve as solu\u00e7\u00f5es no fork do dojo; Solicite um pull request (PR) para consolidar a solu\u00e7\u00e3o;","title":"Salvaguarda do aprendizado"},{"location":"FAQ/","text":"Perguntas Frequentes (FAQ) Porque irei participar do coding dojo? Como o dojo pode me ajudar a crescer com a programa\u00e7\u00e3o? O coding dojo, tem o prop\u00f3sito de auxiliar o desenvolvimento da capacidade em programar. Isto com distribui\u00e7\u00e3o de taferas coordenadas, e com aux\u00edlio supervisionado de multuo aprefei\u00e7oamento, ou de desenvolvedores mais experientes. Como exercitar a habilidade em programar? \u00c9 como na matem\u00e1tica, s\u00f3 aprende fazendo! E existem alguns sites de coding challenge (desafios de c\u00f3digo), para exercitar a programa\u00e7\u00e3o, inclusive em diversas linguagens al\u00e9m de Python. Foi separado alguns sites populares com desafios de programa\u00e7\u00e3o , e muitos destes desafios ser\u00e3o resolvidos em grupo nos encontros da guilda jedi incolume. N\u00e3o sei nada quem vai me ensinar? Todos s\u00e3o convidados a participar, n\u00e3o existe n\u00edvel inicial, a ideia \u00e9 aprender com a troca de ideias e experi\u00eancias. Se voc\u00ea n\u00e3o se sentir confort\u00e1vel em participar programando, est\u00e1 convidado a participar como um membro da plat\u00e9ia para ver a mec\u00e2nica do coding dojo e poder programar no futuro. Portanto, mesmo que voc\u00ea n\u00e3o conhe\u00e7a python, pode vir para aprender conceitos, t\u00e9cnicas, e particularidades da linguagem.","title":"Perguntas Frequentes (FAQ)"},{"location":"FAQ/#perguntas-frequentes-faq","text":"","title":"Perguntas Frequentes (FAQ)"},{"location":"FAQ/#porque-irei-participar-do-coding-dojo-como-o-dojo-pode-me-ajudar-a-crescer-com-a-programacao","text":"O coding dojo, tem o prop\u00f3sito de auxiliar o desenvolvimento da capacidade em programar. Isto com distribui\u00e7\u00e3o de taferas coordenadas, e com aux\u00edlio supervisionado de multuo aprefei\u00e7oamento, ou de desenvolvedores mais experientes.","title":"Porque irei participar do coding dojo? Como o dojo pode me ajudar a crescer com a programa\u00e7\u00e3o?"},{"location":"FAQ/#como-exercitar-a-habilidade-em-programar","text":"\u00c9 como na matem\u00e1tica, s\u00f3 aprende fazendo! E existem alguns sites de coding challenge (desafios de c\u00f3digo), para exercitar a programa\u00e7\u00e3o, inclusive em diversas linguagens al\u00e9m de Python. Foi separado alguns sites populares com desafios de programa\u00e7\u00e3o , e muitos destes desafios ser\u00e3o resolvidos em grupo nos encontros da guilda jedi incolume.","title":"Como exercitar a habilidade em programar?"},{"location":"FAQ/#nao-sei-nada-quem-vai-me-ensinar","text":"Todos s\u00e3o convidados a participar, n\u00e3o existe n\u00edvel inicial, a ideia \u00e9 aprender com a troca de ideias e experi\u00eancias. Se voc\u00ea n\u00e3o se sentir confort\u00e1vel em participar programando, est\u00e1 convidado a participar como um membro da plat\u00e9ia para ver a mec\u00e2nica do coding dojo e poder programar no futuro. Portanto, mesmo que voc\u00ea n\u00e3o conhe\u00e7a python, pode vir para aprender conceitos, t\u00e9cnicas, e particularidades da linguagem.","title":"N\u00e3o sei nada quem vai me ensinar?"},{"location":"about/CONTRIBUTORS/","text":"Maintainers Ricardo Brito Contributors Jedi Member Jedi Member Jedi Member Jedi Member Jedi Member Jedi Member Todos os contribuidores","title":"Maintainers"},{"location":"about/CONTRIBUTORS/#maintainers","text":"Ricardo Brito","title":"Maintainers"},{"location":"about/CONTRIBUTORS/#contributors","text":"Jedi Member Jedi Member Jedi Member Jedi Member Jedi Member Jedi Member Todos os contribuidores","title":"Contributors"},{"location":"about/LICENSE/","text":"LICENSE This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to https://unlicense.org","title":"LICENSE"},{"location":"about/LICENSE/#license","text":"","title":"LICENSE"},{"location":"about/LICENSE/#this-is-free-and-unencumbered-software-released-into-the-public-domain","text":"Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to https://unlicense.org","title":"This is free and unencumbered software released into the public domain."},{"location":"coding_challenge/","text":"Coding Challenge Os sites da web mais populares com desafios de programa\u00e7\u00e3o B Beecrowd BeeCrowd \u00e9 uma plataforma online brasileira de competi\u00e7\u00f5es de programa\u00e7\u00e3o, semelhante ao URI Online Judge e ao Codeforces. O site apresenta desafios de programa\u00e7\u00e3o em diversas \u00e1reas, como algoritmos, estruturas de dados, matem\u00e1tica, grafos, programa\u00e7\u00e3o din\u00e2mica, entre outras. Os desafios s\u00e3o categorizados em diferentes n\u00edveis de dificuldade, permitindo que os usu\u00e1rios testem suas habilidades e melhorem suas capacidades de programa\u00e7\u00e3o. A plataforma tamb\u00e9m oferece recursos de f\u00f3rum e discuss\u00e3o para ajudar os usu\u00e1rios a aprender e compartilhar conhecimentos. \u2191 C CodeChef O CodeChef \u00e9 um site indiano de programa\u00e7\u00e3o competitiva que fornece centenas de desafios. Voc\u00ea consegue escrever o c\u00f3digo em um editor on-line e ver uma cole\u00e7\u00e3o de desafios separados em categorias diversas, dependendo do seu n\u00edvel de habilidade (veja este exemplo). Eles t\u00eam uma grande comunidade de programadores que contribuem nos f\u00f3runs, escrevem tutoriais e participam das competi\u00e7\u00f5es de programa\u00e7\u00e3o do CodeChef. \u2191 CodeCombat O CodeCombat ambienta o treinamento em uma atmosfera de jogo. \u2191 Cod\u00e9dex O Cod\u00e9dex ambienta o treinamento em uma atmosfera de jogo. \u2191 CodeLity Codility \u00e9 uma plataforma de recrutamento t\u00e9cnico que ajuda as empresas a avaliar habilidades de programa\u00e7\u00e3o e l\u00f3gica de candidatos a emprego. A plataforma oferece uma ampla variedade de testes de programa\u00e7\u00e3o, bem como avalia\u00e7\u00f5es de habilidades de codifica\u00e7\u00e3o e programa\u00e7\u00e3o para empresas de tecnologia em todo o mundo. As empresas podem usar a plataforma Codility para criar seus pr\u00f3prios testes personalizados ou escolher entre uma variedade de testes pr\u00e9-fabricados, incluindo desafios de algoritmos, desafios de l\u00f3gica, desafios de codifica\u00e7\u00e3o e muito mais. Os candidatos podem ser avaliados em v\u00e1rias linguagens de programa\u00e7\u00e3o, incluindo Java, Python, C ++, Ruby e outras. \u2191 CoderByte O Coderbyte oferece mais de 200 desafios de programa\u00e7\u00e3o, que voc\u00ea pode resolver diretamente on-line em uma entre 10 linguagens de programa\u00e7\u00e3o (confira este exemplo). Os desafios v\u00e3o de f\u00e1ceis (encontrar a maior palavra em uma string) a dif\u00edceis (imprimir a correspond\u00eancia de maior cardinalidade em um grafo). Eles tamb\u00e9m oferecem uma cole\u00e7\u00e3o de tutoriais de algoritmos, v\u00eddeos introdut\u00f3rios e cursos de prepara\u00e7\u00e3o para entrevistas. Diferente do HackerRank e de outros sites da web semelhantes, voc\u00ea pode ver solu\u00e7\u00f5es de outros usu\u00e1rios para qualquer um dos desafios, al\u00e9m das solu\u00e7\u00f5es oficiais publicadas pelo Coderbyte. \u2191 CodeWars O Codewars tem uma grande cole\u00e7\u00e3o de desafios de programa\u00e7\u00e3o enviados e editados por sua pr\u00f3pria comunidade, cujo os membros s\u00e3o ranqueados por cores. Voc\u00ea pode resolver os desafios on-line diretamente no editor do site em v\u00e1rias linguagens. Voc\u00ea pode ver as discuss\u00f5es de cada um dos desafios, bem como as solu\u00e7\u00f5es dos outros usu\u00e1rios. \u2191 Codier Codier \u00e9 uma plataforma online que oferece desafios de codifica\u00e7\u00e3o e projetos para ajudar desenvolvedores a aprimorar suas habilidades de programa\u00e7\u00e3o. A plataforma oferece uma variedade de desafios de codifica\u00e7\u00e3o que abrangem v\u00e1rias \u00e1reas da programa\u00e7\u00e3o, como algoritmos, estrutura de dados, desenvolvimento web, ci\u00eancia de dados e muito mais. A plataforma Codier \u00e9 projetada para ajudar os desenvolvedores a melhorar suas habilidades de programa\u00e7\u00e3o em v\u00e1rias linguagens de programa\u00e7\u00e3o, como Python, Java, JavaScript, Ruby, C ++ e outras. Os desafios de codifica\u00e7\u00e3o s\u00e3o projetados para serem progressivamente mais dif\u00edceis, permitindo que os usu\u00e1rios desenvolvam suas habilidades de codifica\u00e7\u00e3o \u00e0 medida que avan\u00e7am. \u2191 CodinGame O CodinGame \u00e9 um pouco diferente dos outros sites, pois, em vez de simplesmente resolver desafios de programa\u00e7\u00e3o em um editor, voc\u00ea participa, de fato, na cria\u00e7\u00e3o de c\u00f3digos para jogos que voc\u00ea joga on-line diretamente. Voc\u00ea pode ver uma lista dos jogos que s\u00e3o oferecidos no momento aqui e um exemplo de um deles aqui . O jogo vem com uma descri\u00e7\u00e3o do problema, casos de teste e um editor, onde voc\u00ea pode escrever seu c\u00f3digo em uma das mais de 20 linguagens de programa\u00e7\u00e3o. Embora esse site seja diferente dos sites de programa\u00e7\u00e3o competitiva t\u00edpicos, como os mencionados anteriormente neste artigo, ele ainda \u00e9 bem popular entre os programadores que gostam de resolver desafios e de participar de competi\u00e7\u00f5es. Esta lista foi baseada em algumas quest\u00f5es: as pr\u00f3prias experi\u00eancias do autor no uso dos sites, algumas pesquisas no Google, publica\u00e7\u00f5es no Quora e artigos como este e este. O autor tamb\u00e9m frequentou alguns f\u00f3runs e subreddits, como o r/learnprogramming, para saber quais sites geralmente eram recomendados pelos usu\u00e1rios de l\u00e1. Aviso: o autor trabalha no Coderbyte, que \u00e9 um dos sites mencionados acima. \u2191 CyberDojo CyberDojo \u00e9 uma plataforma de treinamento online de programa\u00e7\u00e3o, projetada para ajudar desenvolvedores a aprimorar suas habilidades de codifica\u00e7\u00e3o. A plataforma fornece uma maneira f\u00e1cil e eficaz de aprender e praticar programa\u00e7\u00e3o em v\u00e1rias linguagens de programa\u00e7\u00e3o, incluindo Ruby, Python, C ++, Java e muitas outras. O CyberDojo oferece um ambiente de programa\u00e7\u00e3o interativo, em que os usu\u00e1rios podem escrever, testar e depurar c\u00f3digo em tempo real. A plataforma tamb\u00e9m oferece uma biblioteca de desafios e exerc\u00edcios de codifica\u00e7\u00e3o, que ajudam os usu\u00e1rios a desenvolver suas habilidades de programa\u00e7\u00e3o de maneira pr\u00e1tica. Uma das caracter\u00edsticas \u00fanicas do CyberDojo \u00e9 a capacidade de colaborar com outros desenvolvedores em tempo real. Isso permite que os usu\u00e1rios trabalhem em conjunto para resolver problemas e desenvolver suas habilidades de programa\u00e7\u00e3o. O CyberDojo \u00e9 uma plataforma \u00fatil para desenvolvedores que desejam aprimorar suas habilidades de codifica\u00e7\u00e3o e trabalhar em projetos em equipe. Com uma biblioteca abrangente de desafios e exerc\u00edcios de codifica\u00e7\u00e3o e um ambiente de programa\u00e7\u00e3o interativo, o CyberDojo oferece uma oportunidade para que os desenvolvedores desenvolvam suas habilidades e se destaquem em um mercado de trabalho altamente competitivo. \u2191 E Edabit Edabit \u00e9 uma plataforma online que oferece uma s\u00e9rie de desafios de programa\u00e7\u00e3o para ajudar os usu\u00e1rios a praticar suas habilidades de codifica\u00e7\u00e3o em uma variedade de linguagens de programa\u00e7\u00e3o, como Python, JavaScript, Java, C ++ e muito mais. Os desafios apresentam diferentes n\u00edveis de dificuldade, desde iniciante at\u00e9 avan\u00e7ado, e cobrem uma ampla gama de t\u00f3picos, incluindo algoritmos, estruturas de dados, programa\u00e7\u00e3o orientada a objetos e muito mais. Al\u00e9m disso, a plataforma Edabit permite que os usu\u00e1rios participem de competi\u00e7\u00f5es e jogos de codifica\u00e7\u00e3o, conectem-se com outros usu\u00e1rios e recebam feedback personalizado em seus c\u00f3digos. Edabit \u00e9 uma \u00f3tima maneira de praticar e melhorar suas habilidades de codifica\u00e7\u00e3o, independentemente do n\u00edvel de experi\u00eancia ou conhecimento em programa\u00e7\u00e3o. \u2191 exercism.io O Exercism \u00e9 um site de desafios de programa\u00e7\u00e3o que oferece mais de 3100 desafios em 52 linguagens de programa\u00e7\u00e3o diversas. Depois de escolher a linguagem que voc\u00ea quer dominar, voc\u00ea faz os desafios de programa\u00e7\u00e3o diretamente de sua m\u00e1quina (o Exercism tem sua pr\u00f3pria interface de linha de comando que voc\u00ea pode baixar do GitHub). Ele \u00e9 um pouco diferente dos outros sites de desafios de programa\u00e7\u00e3o, pois voc\u00ea pode trabalhar com um mentor ap\u00f3s concluir cada desafio. O mentor revisa suas resposta on-line e ajuda voc\u00ea a melhor\u00e1-la, se necess\u00e1rio. Depois que suas respostas foram aprovadas e enviadas, voc\u00ea desbloqueia mais desafios. \u2191 F FreeCodeCamp FreeCodeCamp \u00e9 uma plataforma online gratuita que oferece cursos de programa\u00e7\u00e3o e desenvolvimento web. O site foi criado em 2014 por Quincy Larson como um projeto sem fins lucrativos e j\u00e1 ajudou milh\u00f5es de pessoas em todo o mundo a aprender habilidades de programa\u00e7\u00e3o. O FreeCodeCamp oferece uma variedade de cursos e certifica\u00e7\u00f5es, desde o b\u00e1sico de HTML, CSS e JavaScript at\u00e9 avan\u00e7ados como o desenvolvimento de aplicativos m\u00f3veis e intelig\u00eancia artificial. Al\u00e9m disso, os usu\u00e1rios podem praticar suas habilidades em projetos reais, trabalhar em equipe com outros usu\u00e1rios e receber feedback de uma comunidade global de desenvolvedores. O objetivo do FreeCodeCamp \u00e9 fornecer uma educa\u00e7\u00e3o de alta qualidade e acess\u00edvel para todos, independentemente da localiza\u00e7\u00e3o ou condi\u00e7\u00e3o financeira, para que as pessoas possam melhorar suas carreiras, construir produtos inovadores e mudar suas vidas por meio da tecnologia. \u2191 H HackerEarth HackerEarth \u00e9 uma plataforma de recrutamento e avalia\u00e7\u00e3o de habilidades que conecta empresas a desenvolvedores de todo o mundo. A plataforma oferece uma variedade de ferramentas e recursos para ajudar as empresas a avaliar as habilidades t\u00e9cnicas dos candidatos a emprego, como desafios de programa\u00e7\u00e3o, testes de codifica\u00e7\u00e3o e an\u00e1lise de c\u00f3digos-fonte. A HackerEarth tamb\u00e9m oferece um ambiente de programa\u00e7\u00e3o colaborativo para equipes de desenvolvimento trabalharem juntas em projetos de c\u00f3digo aberto, e uma plataforma de aprendizado que ajuda desenvolvedores a melhorar suas habilidades em diversas \u00e1reas, como algoritmos, estruturas de dados, intelig\u00eancia artificial e aprendizado de m\u00e1quina. A plataforma \u00e9 amplamente utilizada por empresas de tecnologia, startups e organiza\u00e7\u00f5es governamentais para recrutamento e avalia\u00e7\u00e3o de habilidades. A HackerEarth tamb\u00e9m realiza eventos de programa\u00e7\u00e3o, hackathons e competi\u00e7\u00f5es para ajudar a promover o aprendizado e a colabora\u00e7\u00e3o na comunidade de desenvolvedores. \u2191 HackerRank O HackerRank fornece desafios para v\u00e1rios dom\u00ednios diferentes, como Algoritmos, Matem\u00e1tica, SQL, Programa\u00e7\u00e3o Funcional, AI e mais. Voc\u00ea pode resolver todos os desafios diretamente on-line (confira este exemplo). Eles fornecem uma discuss\u00e3o e um quadro de melhores pontua\u00e7\u00f5es para cada desafio. A maioria dos desafios tem um editorial que explica mais sobre o desafio e sobre como abord\u00e1-lo para chegar a uma solu\u00e7\u00e3o. Apesar do editorial, n\u00e3o \u00e9 poss\u00edvel ver, no momento, as solu\u00e7\u00f5es dos outros usu\u00e1rios no HackerRank. O HackerRank tamb\u00e9m d\u00e1 a possibilidade de os usu\u00e1rios enviarem inscri\u00e7\u00f5es e se inscreverem para empregos por meio da solu\u00e7\u00e3o de desafios de programa\u00e7\u00e3o patrocinados por algumas empresas. \u2191 Human Resource Machine Human Resource Machine \u00e9 um jogo de quebra-cabe\u00e7a que simula um ambiente de escrit\u00f3rio, onde o jogador \u00e9 um funcion\u00e1rio respons\u00e1vel por resolver tarefas automatizadas usando l\u00f3gica de programa\u00e7\u00e3o. No jogo, o jogador deve programar o personagem para executar uma s\u00e9rie de tarefas usando uma linguagem de programa\u00e7\u00e3o visual simplificada, que envolve a manipula\u00e7\u00e3o de blocos de comandos para mover e armazenar dados, al\u00e9m de realizar opera\u00e7\u00f5es aritm\u00e9ticas e l\u00f3gicas. O jogo se concentra em ensinar os fundamentos da l\u00f3gica de programa\u00e7\u00e3o, como sequ\u00eancia de instru\u00e7\u00f5es, condi\u00e7\u00f5es e la\u00e7os de repeti\u00e7\u00e3o, de uma forma l\u00fadica e interativa, tornando-o uma ferramenta educativa \u00fatil para iniciantes em programa\u00e7\u00e3o. Human Resource Machine foi desenvolvido pela Tomorrow Corporation e est\u00e1 dispon\u00edvel para v\u00e1rias plataformas, incluindo PC, Mac, iOS, Android e Nintendo Switch. \u2191 L LeetCode O LeetCode \u00e9 um juiz on-line conhecido, que fornece uma lista de mais de 190 desafios que podem ajudar voc\u00ea a se preparar para entrevistas t\u00e9cnicas de emprego. Voc\u00ea pode resolver os desafios diretamente on-line em uma das 9 linguagens de programa\u00e7\u00e3o. Voc\u00ea n\u00e3o pode ver as solu\u00e7\u00f5es dos outros usu\u00e1rios, mas recebe estat\u00edsticas para suas solu\u00e7\u00f5es, como a velocidade de execu\u00e7\u00e3o do seu c\u00f3digo em compara\u00e7\u00e3o com os c\u00f3digos de outros usu\u00e1rios. Eles tamb\u00e9m t\u00eam uma se\u00e7\u00e3o de simula\u00e7\u00e3o de entrevista, as Mock Interviews, especificamente para a prepara\u00e7\u00e3o para entrevistas de emprego. O site hospeda suas pr\u00f3prias competi\u00e7\u00f5es de programa\u00e7\u00e3o, al\u00e9m de ter uma se\u00e7\u00e3o para os artigos que v\u00e3o ajudar voc\u00ea a entender melhor determinados problemas. \u2191 M Mode O Mode possibilita o aprendizado ao responder perguntas utilizando SQL, e sem a necessidade de experi\u00eancia em codifica\u00e7\u00e3o. \u2191 P Programiz Programiz \u00e9 um site de aprendizagem interativa que oferece tutoriais em v\u00e1rias linguagens de programa\u00e7\u00e3o, incluindo C, C++, Python, Java e PHP. Ele \u00e9 projetado para ser uma plataforma f\u00e1cil de usar para iniciantes que desejam aprender a programar, bem como para programadores experientes que desejam aprimorar suas habilidades. Os tutoriais do Programiz s\u00e3o interativos e incluem exemplos de c\u00f3digo e exerc\u00edcios pr\u00e1ticos para que os usu\u00e1rios possam praticar e aplicar o que aprenderam. Al\u00e9m disso, o site tamb\u00e9m possui um editor de c\u00f3digo integrado, permitindo que os usu\u00e1rios escrevam e testem seu pr\u00f3prio c\u00f3digo sem precisar sair da plataforma. Programiz oferece uma ampla variedade de tutoriais, desde conceitos b\u00e1sicos de programa\u00e7\u00e3o at\u00e9 t\u00f3picos mais avan\u00e7ados, como estruturas de dados, algoritmos e programa\u00e7\u00e3o orientada a objetos. Os usu\u00e1rios podem acessar todo o conte\u00fado do site gratuitamente, sem a necessidade de se inscrever ou fazer login. \u2191 Programmr O Programmr \u00e9 uma plataforma online interativa voltada para estudantes e entusiastas que desejam aprender, praticar e se tornar proficiente em programa\u00e7\u00e3o. Na Programmr, \u00e9 poss\u00edvel codificar, compilar e executar projetos diretamente no navegador em quase qualquer linguagem de programa\u00e7\u00e3o. A plataforma oferece simuladores de codifica\u00e7\u00e3o que permitem aos usu\u00e1rios criar e executar aplicativos de linha de comando, aplicativos web, aplicativos m\u00f3veis, aplicativos de banco de dados e aplicativos de m\u00eddia ricos. A Programmr foi fundada em 2011 com o objetivo de tornar o aprendizado de tecnologias de programa\u00e7\u00e3o mais acess\u00edvel e econ\u00f4mico para estudantes e profissionais que desejam aprender a programar no conforto de sua casa ou escrit\u00f3rio. Al\u00e9m disso, a plataforma oferece uma API para empresas que desejam integrar widgets de c\u00f3digo ao vivo em seus pr\u00f3prios sites. \u2191 Project Euler O Project Euler fornece uma grande cole\u00e7\u00e3o de desafios relacionados \u00e0 ci\u00eancia da computa\u00e7\u00e3o e da matem\u00e1tica. Os desafios tipicamente envolvem escrever um pequeno programa para descobrir a solu\u00e7\u00e3o para uma f\u00f3rmula matem\u00e1tica ou equa\u00e7\u00e3o interessante, como encontrar a soma dos d\u00edgitos de todos os n\u00fameros que precedem cada n\u00famero em uma s\u00e9rie. Voc\u00ea n\u00e3o pode programar a solu\u00e7\u00e3o diretamente no site em um editor de c\u00f3digo, mas precisa escrever uma solu\u00e7\u00e3o em seu pr\u00f3prio computador e enviar a solu\u00e7\u00e3o para o site. \u2191 R Rosalind Rosalind \u00e9 uma plataforma para aprender bioinform\u00e1tica e programa\u00e7\u00e3o atrav\u00e9s da resolu\u00e7\u00e3o de problemas. Aprender bioinform\u00e1tica geralmente requer a resolu\u00e7\u00e3o de problemas computacionais de dificuldade variada que s\u00e3o extra\u00eddos de desafios reais da biologia molecular. Uma plataforma para aprender bioinform\u00e1tica por meio da resolu\u00e7\u00e3o de problemas, que tornar o aprendizado de bioinform\u00e1tica divertido e f\u00e1cil. Al\u00e9m disso oferece uma s\u00e9rie de problemas intelectualmente estimulantes que crescem em complexidade biol\u00f3gica e computacional; cada problema \u00e9 verificado automaticamente, de modo que o \u00fanico recurso necess\u00e1rio para aprender bioinform\u00e1tica \u00e9 uma conex\u00e3o com a internet. \u2191 S Sololearn SoloLearn \u00e9 uma plataforma de aprendizado de programa\u00e7\u00e3o que oferece cursos gratuitos de programa\u00e7\u00e3o em v\u00e1rias linguagens, como Python, JavaScript, Java, C ++, HTML, CSS, SQL, entre outras. Al\u00e9m disso, a plataforma conta com uma comunidade de estudantes e professores que podem ajudar a responder perguntas e fornecer feedback sobre o c\u00f3digo dos alunos. A plataforma oferece recursos como li\u00e7\u00f5es interativas, desafios de codifica\u00e7\u00e3o, quizzes e projetos pr\u00e1ticos para ajudar os usu\u00e1rios a aprender programa\u00e7\u00e3o de maneira divertida e eficaz. SoloLearn tamb\u00e9m oferece certificados de conclus\u00e3o de curso que podem ser compartilhados em redes sociais ou adicionados a um curr\u00edculo. \u2191 Sphere Online Judge (SPOJ) O Sphere Online Judge (SPOJ) \u00e9 um juiz on-line que fornece mais de 20 mil desafios de programa\u00e7\u00e3o. Voc\u00ea pode enviar seu c\u00f3digo por meio de um editor on-line. O SPOJ tamb\u00e9m hospeda suas pr\u00f3prias competi\u00e7\u00f5es e tem uma \u00e1rea para os usu\u00e1rios discutirem os desafios de programa\u00e7\u00e3o. No entanto, eles n\u00e3o fornecem solu\u00e7\u00f5es ou editoriais oficiais como outros sites similares. \u2191 SQLZoo o SQLZoo apresenta mais de 100 projetos da vida real para aprimorar conhecimentos e pr\u00e1tica com Analise e Ci\u00eancias de dados. \u2191 T The Algorithms A maior biblioteca de algoritmos de c\u00f3digo aberto do GitHub. \u2191 TopCoder O TopCoder \u00e9 uma das plataformas on-line originais de programa\u00e7\u00e3o competitiva. L\u00e1, voc\u00ea encontra uma lista de desafios com algoritmos do passado que voc\u00ea pode resolver por conta pr\u00f3pria, on-line e diretamente, usando seu editor de c\u00f3digo. As Single Round Matches do site s\u00e3o populares e oferecidas algumas vezes ao m\u00eas em horas espec\u00edficas. Nelas, voc\u00ea pode competir contra os outros resolvendo desafios o mais r\u00e1pido poss\u00edvel para ter as melhores pontua\u00e7\u00f5es. Os usu\u00e1rios com a melhor classifica\u00e7\u00e3o no TopCoder s\u00e3o programadores e competidores muito bons que participam regularmente de competi\u00e7\u00f5es de programa\u00e7\u00e3o. O usu\u00e1rio com a melhor classifica\u00e7\u00e3o tem seu pr\u00f3prio blog, chamado Algorithms weekly by Petr Mitrichev, onde ele escreve sobre as competi\u00e7\u00f5es de programa\u00e7\u00f5es, algoritmos, matem\u00e1tica e mais. \u2191 V Vim Adventures Vim Adventures \u00e9 um jogo educativo online que ajuda os usu\u00e1rios a aprender a usar o editor de texto Vim, um dos editores de texto mais populares para desenvolvimento de software. O jogo apresenta uma s\u00e9rie de desafios interativos que ensinam as funcionalidades b\u00e1sicas e avan\u00e7adas do Vim, como mover o cursor, copiar e colar, desfazer e refazer, procurar e substituir texto, usar comandos de edi\u00e7\u00e3o e muito mais. Vim Adventures \u00e9 uma ferramenta \u00fatil para quem deseja se tornar mais proficiente no uso do Vim e aumentar a efici\u00eancia na edi\u00e7\u00e3o de c\u00f3digo. \u2191 W W3schools Tutoriais W3Schools \u00e9 um site que oferece tutoriais e refer\u00eancias sobre linguagens de programa\u00e7\u00e3o web, incluindo HTML, CSS, JavaScript, PHP, SQL, e muitas outras. O site \u00e9 bastante popular e utilizado por desenvolvedores iniciantes e experientes como uma fonte de aprendizado e consulta. Os tutoriais e exemplos s\u00e3o organizados de forma clara e objetiva, facilitando o aprendizado e a compreens\u00e3o dos conceitos e t\u00e9cnicas abordados. Al\u00e9m disso, o site possui uma ferramenta online para testar c\u00f3digos e uma se\u00e7\u00e3o de certifica\u00e7\u00e3o para os usu\u00e1rios que desejam comprovar seus conhecimentos. \u2191","title":"Coding Challenge"},{"location":"coding_challenge/#coding-challenge","text":"Os sites da web mais populares com desafios de programa\u00e7\u00e3o","title":"Coding Challenge"},{"location":"coding_challenge/#b","text":"","title":"B"},{"location":"coding_challenge/#beecrowd","text":"BeeCrowd \u00e9 uma plataforma online brasileira de competi\u00e7\u00f5es de programa\u00e7\u00e3o, semelhante ao URI Online Judge e ao Codeforces. O site apresenta desafios de programa\u00e7\u00e3o em diversas \u00e1reas, como algoritmos, estruturas de dados, matem\u00e1tica, grafos, programa\u00e7\u00e3o din\u00e2mica, entre outras. Os desafios s\u00e3o categorizados em diferentes n\u00edveis de dificuldade, permitindo que os usu\u00e1rios testem suas habilidades e melhorem suas capacidades de programa\u00e7\u00e3o. A plataforma tamb\u00e9m oferece recursos de f\u00f3rum e discuss\u00e3o para ajudar os usu\u00e1rios a aprender e compartilhar conhecimentos. \u2191","title":"Beecrowd"},{"location":"coding_challenge/#c","text":"","title":"C"},{"location":"coding_challenge/#codechef","text":"O CodeChef \u00e9 um site indiano de programa\u00e7\u00e3o competitiva que fornece centenas de desafios. Voc\u00ea consegue escrever o c\u00f3digo em um editor on-line e ver uma cole\u00e7\u00e3o de desafios separados em categorias diversas, dependendo do seu n\u00edvel de habilidade (veja este exemplo). Eles t\u00eam uma grande comunidade de programadores que contribuem nos f\u00f3runs, escrevem tutoriais e participam das competi\u00e7\u00f5es de programa\u00e7\u00e3o do CodeChef. \u2191","title":"CodeChef"},{"location":"coding_challenge/#codecombat","text":"O CodeCombat ambienta o treinamento em uma atmosfera de jogo. \u2191","title":"CodeCombat"},{"location":"coding_challenge/#codedex","text":"O Cod\u00e9dex ambienta o treinamento em uma atmosfera de jogo. \u2191","title":"Cod\u00e9dex"},{"location":"coding_challenge/#codelity","text":"Codility \u00e9 uma plataforma de recrutamento t\u00e9cnico que ajuda as empresas a avaliar habilidades de programa\u00e7\u00e3o e l\u00f3gica de candidatos a emprego. A plataforma oferece uma ampla variedade de testes de programa\u00e7\u00e3o, bem como avalia\u00e7\u00f5es de habilidades de codifica\u00e7\u00e3o e programa\u00e7\u00e3o para empresas de tecnologia em todo o mundo. As empresas podem usar a plataforma Codility para criar seus pr\u00f3prios testes personalizados ou escolher entre uma variedade de testes pr\u00e9-fabricados, incluindo desafios de algoritmos, desafios de l\u00f3gica, desafios de codifica\u00e7\u00e3o e muito mais. Os candidatos podem ser avaliados em v\u00e1rias linguagens de programa\u00e7\u00e3o, incluindo Java, Python, C ++, Ruby e outras. \u2191","title":"CodeLity"},{"location":"coding_challenge/#coderbyte","text":"O Coderbyte oferece mais de 200 desafios de programa\u00e7\u00e3o, que voc\u00ea pode resolver diretamente on-line em uma entre 10 linguagens de programa\u00e7\u00e3o (confira este exemplo). Os desafios v\u00e3o de f\u00e1ceis (encontrar a maior palavra em uma string) a dif\u00edceis (imprimir a correspond\u00eancia de maior cardinalidade em um grafo). Eles tamb\u00e9m oferecem uma cole\u00e7\u00e3o de tutoriais de algoritmos, v\u00eddeos introdut\u00f3rios e cursos de prepara\u00e7\u00e3o para entrevistas. Diferente do HackerRank e de outros sites da web semelhantes, voc\u00ea pode ver solu\u00e7\u00f5es de outros usu\u00e1rios para qualquer um dos desafios, al\u00e9m das solu\u00e7\u00f5es oficiais publicadas pelo Coderbyte. \u2191","title":"CoderByte"},{"location":"coding_challenge/#codewars","text":"O Codewars tem uma grande cole\u00e7\u00e3o de desafios de programa\u00e7\u00e3o enviados e editados por sua pr\u00f3pria comunidade, cujo os membros s\u00e3o ranqueados por cores. Voc\u00ea pode resolver os desafios on-line diretamente no editor do site em v\u00e1rias linguagens. Voc\u00ea pode ver as discuss\u00f5es de cada um dos desafios, bem como as solu\u00e7\u00f5es dos outros usu\u00e1rios. \u2191","title":"CodeWars"},{"location":"coding_challenge/#codier","text":"Codier \u00e9 uma plataforma online que oferece desafios de codifica\u00e7\u00e3o e projetos para ajudar desenvolvedores a aprimorar suas habilidades de programa\u00e7\u00e3o. A plataforma oferece uma variedade de desafios de codifica\u00e7\u00e3o que abrangem v\u00e1rias \u00e1reas da programa\u00e7\u00e3o, como algoritmos, estrutura de dados, desenvolvimento web, ci\u00eancia de dados e muito mais. A plataforma Codier \u00e9 projetada para ajudar os desenvolvedores a melhorar suas habilidades de programa\u00e7\u00e3o em v\u00e1rias linguagens de programa\u00e7\u00e3o, como Python, Java, JavaScript, Ruby, C ++ e outras. Os desafios de codifica\u00e7\u00e3o s\u00e3o projetados para serem progressivamente mais dif\u00edceis, permitindo que os usu\u00e1rios desenvolvam suas habilidades de codifica\u00e7\u00e3o \u00e0 medida que avan\u00e7am. \u2191","title":"Codier"},{"location":"coding_challenge/#codingame","text":"O CodinGame \u00e9 um pouco diferente dos outros sites, pois, em vez de simplesmente resolver desafios de programa\u00e7\u00e3o em um editor, voc\u00ea participa, de fato, na cria\u00e7\u00e3o de c\u00f3digos para jogos que voc\u00ea joga on-line diretamente. Voc\u00ea pode ver uma lista dos jogos que s\u00e3o oferecidos no momento aqui e um exemplo de um deles aqui . O jogo vem com uma descri\u00e7\u00e3o do problema, casos de teste e um editor, onde voc\u00ea pode escrever seu c\u00f3digo em uma das mais de 20 linguagens de programa\u00e7\u00e3o. Embora esse site seja diferente dos sites de programa\u00e7\u00e3o competitiva t\u00edpicos, como os mencionados anteriormente neste artigo, ele ainda \u00e9 bem popular entre os programadores que gostam de resolver desafios e de participar de competi\u00e7\u00f5es. Esta lista foi baseada em algumas quest\u00f5es: as pr\u00f3prias experi\u00eancias do autor no uso dos sites, algumas pesquisas no Google, publica\u00e7\u00f5es no Quora e artigos como este e este. O autor tamb\u00e9m frequentou alguns f\u00f3runs e subreddits, como o r/learnprogramming, para saber quais sites geralmente eram recomendados pelos usu\u00e1rios de l\u00e1. Aviso: o autor trabalha no Coderbyte, que \u00e9 um dos sites mencionados acima. \u2191","title":"CodinGame"},{"location":"coding_challenge/#cyberdojo","text":"CyberDojo \u00e9 uma plataforma de treinamento online de programa\u00e7\u00e3o, projetada para ajudar desenvolvedores a aprimorar suas habilidades de codifica\u00e7\u00e3o. A plataforma fornece uma maneira f\u00e1cil e eficaz de aprender e praticar programa\u00e7\u00e3o em v\u00e1rias linguagens de programa\u00e7\u00e3o, incluindo Ruby, Python, C ++, Java e muitas outras. O CyberDojo oferece um ambiente de programa\u00e7\u00e3o interativo, em que os usu\u00e1rios podem escrever, testar e depurar c\u00f3digo em tempo real. A plataforma tamb\u00e9m oferece uma biblioteca de desafios e exerc\u00edcios de codifica\u00e7\u00e3o, que ajudam os usu\u00e1rios a desenvolver suas habilidades de programa\u00e7\u00e3o de maneira pr\u00e1tica. Uma das caracter\u00edsticas \u00fanicas do CyberDojo \u00e9 a capacidade de colaborar com outros desenvolvedores em tempo real. Isso permite que os usu\u00e1rios trabalhem em conjunto para resolver problemas e desenvolver suas habilidades de programa\u00e7\u00e3o. O CyberDojo \u00e9 uma plataforma \u00fatil para desenvolvedores que desejam aprimorar suas habilidades de codifica\u00e7\u00e3o e trabalhar em projetos em equipe. Com uma biblioteca abrangente de desafios e exerc\u00edcios de codifica\u00e7\u00e3o e um ambiente de programa\u00e7\u00e3o interativo, o CyberDojo oferece uma oportunidade para que os desenvolvedores desenvolvam suas habilidades e se destaquem em um mercado de trabalho altamente competitivo. \u2191","title":"CyberDojo"},{"location":"coding_challenge/#e","text":"","title":"E"},{"location":"coding_challenge/#edabit","text":"Edabit \u00e9 uma plataforma online que oferece uma s\u00e9rie de desafios de programa\u00e7\u00e3o para ajudar os usu\u00e1rios a praticar suas habilidades de codifica\u00e7\u00e3o em uma variedade de linguagens de programa\u00e7\u00e3o, como Python, JavaScript, Java, C ++ e muito mais. Os desafios apresentam diferentes n\u00edveis de dificuldade, desde iniciante at\u00e9 avan\u00e7ado, e cobrem uma ampla gama de t\u00f3picos, incluindo algoritmos, estruturas de dados, programa\u00e7\u00e3o orientada a objetos e muito mais. Al\u00e9m disso, a plataforma Edabit permite que os usu\u00e1rios participem de competi\u00e7\u00f5es e jogos de codifica\u00e7\u00e3o, conectem-se com outros usu\u00e1rios e recebam feedback personalizado em seus c\u00f3digos. Edabit \u00e9 uma \u00f3tima maneira de praticar e melhorar suas habilidades de codifica\u00e7\u00e3o, independentemente do n\u00edvel de experi\u00eancia ou conhecimento em programa\u00e7\u00e3o. \u2191","title":"Edabit"},{"location":"coding_challenge/#exercismio","text":"O Exercism \u00e9 um site de desafios de programa\u00e7\u00e3o que oferece mais de 3100 desafios em 52 linguagens de programa\u00e7\u00e3o diversas. Depois de escolher a linguagem que voc\u00ea quer dominar, voc\u00ea faz os desafios de programa\u00e7\u00e3o diretamente de sua m\u00e1quina (o Exercism tem sua pr\u00f3pria interface de linha de comando que voc\u00ea pode baixar do GitHub). Ele \u00e9 um pouco diferente dos outros sites de desafios de programa\u00e7\u00e3o, pois voc\u00ea pode trabalhar com um mentor ap\u00f3s concluir cada desafio. O mentor revisa suas resposta on-line e ajuda voc\u00ea a melhor\u00e1-la, se necess\u00e1rio. Depois que suas respostas foram aprovadas e enviadas, voc\u00ea desbloqueia mais desafios. \u2191","title":"exercism.io"},{"location":"coding_challenge/#f","text":"","title":"F"},{"location":"coding_challenge/#freecodecamp","text":"FreeCodeCamp \u00e9 uma plataforma online gratuita que oferece cursos de programa\u00e7\u00e3o e desenvolvimento web. O site foi criado em 2014 por Quincy Larson como um projeto sem fins lucrativos e j\u00e1 ajudou milh\u00f5es de pessoas em todo o mundo a aprender habilidades de programa\u00e7\u00e3o. O FreeCodeCamp oferece uma variedade de cursos e certifica\u00e7\u00f5es, desde o b\u00e1sico de HTML, CSS e JavaScript at\u00e9 avan\u00e7ados como o desenvolvimento de aplicativos m\u00f3veis e intelig\u00eancia artificial. Al\u00e9m disso, os usu\u00e1rios podem praticar suas habilidades em projetos reais, trabalhar em equipe com outros usu\u00e1rios e receber feedback de uma comunidade global de desenvolvedores. O objetivo do FreeCodeCamp \u00e9 fornecer uma educa\u00e7\u00e3o de alta qualidade e acess\u00edvel para todos, independentemente da localiza\u00e7\u00e3o ou condi\u00e7\u00e3o financeira, para que as pessoas possam melhorar suas carreiras, construir produtos inovadores e mudar suas vidas por meio da tecnologia. \u2191","title":"FreeCodeCamp"},{"location":"coding_challenge/#h","text":"","title":"H"},{"location":"coding_challenge/#hackerearth","text":"HackerEarth \u00e9 uma plataforma de recrutamento e avalia\u00e7\u00e3o de habilidades que conecta empresas a desenvolvedores de todo o mundo. A plataforma oferece uma variedade de ferramentas e recursos para ajudar as empresas a avaliar as habilidades t\u00e9cnicas dos candidatos a emprego, como desafios de programa\u00e7\u00e3o, testes de codifica\u00e7\u00e3o e an\u00e1lise de c\u00f3digos-fonte. A HackerEarth tamb\u00e9m oferece um ambiente de programa\u00e7\u00e3o colaborativo para equipes de desenvolvimento trabalharem juntas em projetos de c\u00f3digo aberto, e uma plataforma de aprendizado que ajuda desenvolvedores a melhorar suas habilidades em diversas \u00e1reas, como algoritmos, estruturas de dados, intelig\u00eancia artificial e aprendizado de m\u00e1quina. A plataforma \u00e9 amplamente utilizada por empresas de tecnologia, startups e organiza\u00e7\u00f5es governamentais para recrutamento e avalia\u00e7\u00e3o de habilidades. A HackerEarth tamb\u00e9m realiza eventos de programa\u00e7\u00e3o, hackathons e competi\u00e7\u00f5es para ajudar a promover o aprendizado e a colabora\u00e7\u00e3o na comunidade de desenvolvedores. \u2191","title":"HackerEarth"},{"location":"coding_challenge/#hackerrank","text":"O HackerRank fornece desafios para v\u00e1rios dom\u00ednios diferentes, como Algoritmos, Matem\u00e1tica, SQL, Programa\u00e7\u00e3o Funcional, AI e mais. Voc\u00ea pode resolver todos os desafios diretamente on-line (confira este exemplo). Eles fornecem uma discuss\u00e3o e um quadro de melhores pontua\u00e7\u00f5es para cada desafio. A maioria dos desafios tem um editorial que explica mais sobre o desafio e sobre como abord\u00e1-lo para chegar a uma solu\u00e7\u00e3o. Apesar do editorial, n\u00e3o \u00e9 poss\u00edvel ver, no momento, as solu\u00e7\u00f5es dos outros usu\u00e1rios no HackerRank. O HackerRank tamb\u00e9m d\u00e1 a possibilidade de os usu\u00e1rios enviarem inscri\u00e7\u00f5es e se inscreverem para empregos por meio da solu\u00e7\u00e3o de desafios de programa\u00e7\u00e3o patrocinados por algumas empresas. \u2191","title":"HackerRank"},{"location":"coding_challenge/#human-resource-machine","text":"Human Resource Machine \u00e9 um jogo de quebra-cabe\u00e7a que simula um ambiente de escrit\u00f3rio, onde o jogador \u00e9 um funcion\u00e1rio respons\u00e1vel por resolver tarefas automatizadas usando l\u00f3gica de programa\u00e7\u00e3o. No jogo, o jogador deve programar o personagem para executar uma s\u00e9rie de tarefas usando uma linguagem de programa\u00e7\u00e3o visual simplificada, que envolve a manipula\u00e7\u00e3o de blocos de comandos para mover e armazenar dados, al\u00e9m de realizar opera\u00e7\u00f5es aritm\u00e9ticas e l\u00f3gicas. O jogo se concentra em ensinar os fundamentos da l\u00f3gica de programa\u00e7\u00e3o, como sequ\u00eancia de instru\u00e7\u00f5es, condi\u00e7\u00f5es e la\u00e7os de repeti\u00e7\u00e3o, de uma forma l\u00fadica e interativa, tornando-o uma ferramenta educativa \u00fatil para iniciantes em programa\u00e7\u00e3o. Human Resource Machine foi desenvolvido pela Tomorrow Corporation e est\u00e1 dispon\u00edvel para v\u00e1rias plataformas, incluindo PC, Mac, iOS, Android e Nintendo Switch. \u2191","title":"Human Resource Machine"},{"location":"coding_challenge/#l","text":"","title":"L"},{"location":"coding_challenge/#leetcode","text":"O LeetCode \u00e9 um juiz on-line conhecido, que fornece uma lista de mais de 190 desafios que podem ajudar voc\u00ea a se preparar para entrevistas t\u00e9cnicas de emprego. Voc\u00ea pode resolver os desafios diretamente on-line em uma das 9 linguagens de programa\u00e7\u00e3o. Voc\u00ea n\u00e3o pode ver as solu\u00e7\u00f5es dos outros usu\u00e1rios, mas recebe estat\u00edsticas para suas solu\u00e7\u00f5es, como a velocidade de execu\u00e7\u00e3o do seu c\u00f3digo em compara\u00e7\u00e3o com os c\u00f3digos de outros usu\u00e1rios. Eles tamb\u00e9m t\u00eam uma se\u00e7\u00e3o de simula\u00e7\u00e3o de entrevista, as Mock Interviews, especificamente para a prepara\u00e7\u00e3o para entrevistas de emprego. O site hospeda suas pr\u00f3prias competi\u00e7\u00f5es de programa\u00e7\u00e3o, al\u00e9m de ter uma se\u00e7\u00e3o para os artigos que v\u00e3o ajudar voc\u00ea a entender melhor determinados problemas. \u2191","title":"LeetCode"},{"location":"coding_challenge/#m","text":"","title":"M"},{"location":"coding_challenge/#mode","text":"O Mode possibilita o aprendizado ao responder perguntas utilizando SQL, e sem a necessidade de experi\u00eancia em codifica\u00e7\u00e3o. \u2191","title":"Mode"},{"location":"coding_challenge/#p","text":"","title":"P"},{"location":"coding_challenge/#programiz","text":"Programiz \u00e9 um site de aprendizagem interativa que oferece tutoriais em v\u00e1rias linguagens de programa\u00e7\u00e3o, incluindo C, C++, Python, Java e PHP. Ele \u00e9 projetado para ser uma plataforma f\u00e1cil de usar para iniciantes que desejam aprender a programar, bem como para programadores experientes que desejam aprimorar suas habilidades. Os tutoriais do Programiz s\u00e3o interativos e incluem exemplos de c\u00f3digo e exerc\u00edcios pr\u00e1ticos para que os usu\u00e1rios possam praticar e aplicar o que aprenderam. Al\u00e9m disso, o site tamb\u00e9m possui um editor de c\u00f3digo integrado, permitindo que os usu\u00e1rios escrevam e testem seu pr\u00f3prio c\u00f3digo sem precisar sair da plataforma. Programiz oferece uma ampla variedade de tutoriais, desde conceitos b\u00e1sicos de programa\u00e7\u00e3o at\u00e9 t\u00f3picos mais avan\u00e7ados, como estruturas de dados, algoritmos e programa\u00e7\u00e3o orientada a objetos. Os usu\u00e1rios podem acessar todo o conte\u00fado do site gratuitamente, sem a necessidade de se inscrever ou fazer login. \u2191","title":"Programiz"},{"location":"coding_challenge/#programmr","text":"O Programmr \u00e9 uma plataforma online interativa voltada para estudantes e entusiastas que desejam aprender, praticar e se tornar proficiente em programa\u00e7\u00e3o. Na Programmr, \u00e9 poss\u00edvel codificar, compilar e executar projetos diretamente no navegador em quase qualquer linguagem de programa\u00e7\u00e3o. A plataforma oferece simuladores de codifica\u00e7\u00e3o que permitem aos usu\u00e1rios criar e executar aplicativos de linha de comando, aplicativos web, aplicativos m\u00f3veis, aplicativos de banco de dados e aplicativos de m\u00eddia ricos. A Programmr foi fundada em 2011 com o objetivo de tornar o aprendizado de tecnologias de programa\u00e7\u00e3o mais acess\u00edvel e econ\u00f4mico para estudantes e profissionais que desejam aprender a programar no conforto de sua casa ou escrit\u00f3rio. Al\u00e9m disso, a plataforma oferece uma API para empresas que desejam integrar widgets de c\u00f3digo ao vivo em seus pr\u00f3prios sites. \u2191","title":"Programmr"},{"location":"coding_challenge/#project-euler","text":"O Project Euler fornece uma grande cole\u00e7\u00e3o de desafios relacionados \u00e0 ci\u00eancia da computa\u00e7\u00e3o e da matem\u00e1tica. Os desafios tipicamente envolvem escrever um pequeno programa para descobrir a solu\u00e7\u00e3o para uma f\u00f3rmula matem\u00e1tica ou equa\u00e7\u00e3o interessante, como encontrar a soma dos d\u00edgitos de todos os n\u00fameros que precedem cada n\u00famero em uma s\u00e9rie. Voc\u00ea n\u00e3o pode programar a solu\u00e7\u00e3o diretamente no site em um editor de c\u00f3digo, mas precisa escrever uma solu\u00e7\u00e3o em seu pr\u00f3prio computador e enviar a solu\u00e7\u00e3o para o site. \u2191","title":"Project Euler"},{"location":"coding_challenge/#r","text":"","title":"R"},{"location":"coding_challenge/#rosalind","text":"Rosalind \u00e9 uma plataforma para aprender bioinform\u00e1tica e programa\u00e7\u00e3o atrav\u00e9s da resolu\u00e7\u00e3o de problemas. Aprender bioinform\u00e1tica geralmente requer a resolu\u00e7\u00e3o de problemas computacionais de dificuldade variada que s\u00e3o extra\u00eddos de desafios reais da biologia molecular. Uma plataforma para aprender bioinform\u00e1tica por meio da resolu\u00e7\u00e3o de problemas, que tornar o aprendizado de bioinform\u00e1tica divertido e f\u00e1cil. Al\u00e9m disso oferece uma s\u00e9rie de problemas intelectualmente estimulantes que crescem em complexidade biol\u00f3gica e computacional; cada problema \u00e9 verificado automaticamente, de modo que o \u00fanico recurso necess\u00e1rio para aprender bioinform\u00e1tica \u00e9 uma conex\u00e3o com a internet. \u2191","title":"Rosalind"},{"location":"coding_challenge/#s","text":"","title":"S"},{"location":"coding_challenge/#sololearn","text":"SoloLearn \u00e9 uma plataforma de aprendizado de programa\u00e7\u00e3o que oferece cursos gratuitos de programa\u00e7\u00e3o em v\u00e1rias linguagens, como Python, JavaScript, Java, C ++, HTML, CSS, SQL, entre outras. Al\u00e9m disso, a plataforma conta com uma comunidade de estudantes e professores que podem ajudar a responder perguntas e fornecer feedback sobre o c\u00f3digo dos alunos. A plataforma oferece recursos como li\u00e7\u00f5es interativas, desafios de codifica\u00e7\u00e3o, quizzes e projetos pr\u00e1ticos para ajudar os usu\u00e1rios a aprender programa\u00e7\u00e3o de maneira divertida e eficaz. SoloLearn tamb\u00e9m oferece certificados de conclus\u00e3o de curso que podem ser compartilhados em redes sociais ou adicionados a um curr\u00edculo. \u2191","title":"Sololearn"},{"location":"coding_challenge/#sphere-online-judge-spoj","text":"O Sphere Online Judge (SPOJ) \u00e9 um juiz on-line que fornece mais de 20 mil desafios de programa\u00e7\u00e3o. Voc\u00ea pode enviar seu c\u00f3digo por meio de um editor on-line. O SPOJ tamb\u00e9m hospeda suas pr\u00f3prias competi\u00e7\u00f5es e tem uma \u00e1rea para os usu\u00e1rios discutirem os desafios de programa\u00e7\u00e3o. No entanto, eles n\u00e3o fornecem solu\u00e7\u00f5es ou editoriais oficiais como outros sites similares. \u2191","title":"Sphere Online Judge (SPOJ)"},{"location":"coding_challenge/#sqlzoo","text":"o SQLZoo apresenta mais de 100 projetos da vida real para aprimorar conhecimentos e pr\u00e1tica com Analise e Ci\u00eancias de dados. \u2191","title":"SQLZoo"},{"location":"coding_challenge/#t","text":"","title":"T"},{"location":"coding_challenge/#the-algorithms","text":"A maior biblioteca de algoritmos de c\u00f3digo aberto do GitHub. \u2191","title":"The Algorithms"},{"location":"coding_challenge/#topcoder","text":"O TopCoder \u00e9 uma das plataformas on-line originais de programa\u00e7\u00e3o competitiva. L\u00e1, voc\u00ea encontra uma lista de desafios com algoritmos do passado que voc\u00ea pode resolver por conta pr\u00f3pria, on-line e diretamente, usando seu editor de c\u00f3digo. As Single Round Matches do site s\u00e3o populares e oferecidas algumas vezes ao m\u00eas em horas espec\u00edficas. Nelas, voc\u00ea pode competir contra os outros resolvendo desafios o mais r\u00e1pido poss\u00edvel para ter as melhores pontua\u00e7\u00f5es. Os usu\u00e1rios com a melhor classifica\u00e7\u00e3o no TopCoder s\u00e3o programadores e competidores muito bons que participam regularmente de competi\u00e7\u00f5es de programa\u00e7\u00e3o. O usu\u00e1rio com a melhor classifica\u00e7\u00e3o tem seu pr\u00f3prio blog, chamado Algorithms weekly by Petr Mitrichev, onde ele escreve sobre as competi\u00e7\u00f5es de programa\u00e7\u00f5es, algoritmos, matem\u00e1tica e mais. \u2191","title":"TopCoder"},{"location":"coding_challenge/#v","text":"","title":"V"},{"location":"coding_challenge/#vim-adventures","text":"Vim Adventures \u00e9 um jogo educativo online que ajuda os usu\u00e1rios a aprender a usar o editor de texto Vim, um dos editores de texto mais populares para desenvolvimento de software. O jogo apresenta uma s\u00e9rie de desafios interativos que ensinam as funcionalidades b\u00e1sicas e avan\u00e7adas do Vim, como mover o cursor, copiar e colar, desfazer e refazer, procurar e substituir texto, usar comandos de edi\u00e7\u00e3o e muito mais. Vim Adventures \u00e9 uma ferramenta \u00fatil para quem deseja se tornar mais proficiente no uso do Vim e aumentar a efici\u00eancia na edi\u00e7\u00e3o de c\u00f3digo. \u2191","title":"Vim Adventures"},{"location":"coding_challenge/#w","text":"","title":"W"},{"location":"coding_challenge/#w3schools-tutoriais","text":"W3Schools \u00e9 um site que oferece tutoriais e refer\u00eancias sobre linguagens de programa\u00e7\u00e3o web, incluindo HTML, CSS, JavaScript, PHP, SQL, e muitas outras. O site \u00e9 bastante popular e utilizado por desenvolvedores iniciantes e experientes como uma fonte de aprendizado e consulta. Os tutoriais e exemplos s\u00e3o organizados de forma clara e objetiva, facilitando o aprendizado e a compreens\u00e3o dos conceitos e t\u00e9cnicas abordados. Al\u00e9m disso, o site possui uma ferramenta online para testar c\u00f3digos e uma se\u00e7\u00e3o de certifica\u00e7\u00e3o para os usu\u00e1rios que desejam comprovar seus conhecimentos. \u2191","title":"W3schools Tutoriais"},{"location":"user_guide/COVENTIONAL_COMMITS/","text":"Git commits messages This project follow Conventional Commits, A specification for adding human and machine readable meaning to commit messages. <type>[optional scope]: <description> [optional body] [optional footer(s)] The commit contains the following structural elements, to communicate intent to the consumers of your library: + type: the type of commit (feat|feature, fix|bugfix, chore, refactor, docs, style, test, perf, ci, build, revert) + feat: A commit of the type feat introduces a new feature to the codebase (this correlates with MINOR in Semantic Versioning). + fix: A commit of the type fix patches a bug in your codebase (this correlates with PATCH in Semantic Versioning). + chore: Changes that do not relate to a fix or feature and don\u00b4t modify src or test files (for example updating dependencies); + refactor: refactored code that neither fixes a bug nor adds a feature; + docs: updates to documentation such as a the README or other markdown or rst files; + style: Changes that do not affect the meaning of the code, likely related to code formatting such as white-space, missing semi-colons, black style applied, and so on; + test: Including new or correcting previous tests; + perf: preformance impovements; + ci: Continuos integration related; + build: changes that affect the build system or external dependencies; + revert:reverts a previous commit; + scope: This is optional, but indicate a specific scope ; + description: show what was done in the commit; + body: Full description, if descript not enough; + footer: This is optional, but agregate additional information about commit, lake revisor, references, millistone and others (for example \"close #issue-id\"). Examples Commit message with description and breaking change footer feat: allow provided config object to extend other configs BREAKING CHANGE: `extends` key in config file is now used for extending other config files Commit message with ! to draw attention to breaking change feat!: send an email to the customer when a product is shipped Commit message with scope and ! to draw attention to breaking change feat(api)!: send an email to the customer when a product is shipped Commit message with both ! and BREAKING CHANGE footer chore!: drop support for Python 2.6 BREAKING CHANGE: Some features not available in Python 2.7-. Commit message with no body docs: correct spelling of CHANGELOG Commit message with scope feat(lang): add polish language Commit message with multi-paragraph body and multiple footers fix: prevent racing of requests Introduce a request id and a reference to latest request. Dismiss incoming responses other than from latest request. Remove timeouts which were used to mitigate the racing issue but are obsolete now. Reviewed-by: @britodfbr Refs: #123 The full specification maybe access on english lang or others languages about Brazilian Portuguese .","title":"Git commits messages"},{"location":"user_guide/COVENTIONAL_COMMITS/#git-commits-messages","text":"This project follow Conventional Commits, A specification for adding human and machine readable meaning to commit messages. <type>[optional scope]: <description> [optional body] [optional footer(s)] The commit contains the following structural elements, to communicate intent to the consumers of your library: + type: the type of commit (feat|feature, fix|bugfix, chore, refactor, docs, style, test, perf, ci, build, revert) + feat: A commit of the type feat introduces a new feature to the codebase (this correlates with MINOR in Semantic Versioning). + fix: A commit of the type fix patches a bug in your codebase (this correlates with PATCH in Semantic Versioning). + chore: Changes that do not relate to a fix or feature and don\u00b4t modify src or test files (for example updating dependencies); + refactor: refactored code that neither fixes a bug nor adds a feature; + docs: updates to documentation such as a the README or other markdown or rst files; + style: Changes that do not affect the meaning of the code, likely related to code formatting such as white-space, missing semi-colons, black style applied, and so on; + test: Including new or correcting previous tests; + perf: preformance impovements; + ci: Continuos integration related; + build: changes that affect the build system or external dependencies; + revert:reverts a previous commit; + scope: This is optional, but indicate a specific scope ; + description: show what was done in the commit; + body: Full description, if descript not enough; + footer: This is optional, but agregate additional information about commit, lake revisor, references, millistone and others (for example \"close #issue-id\").","title":"Git commits messages"},{"location":"user_guide/COVENTIONAL_COMMITS/#examples","text":"","title":"Examples"},{"location":"user_guide/COVENTIONAL_COMMITS/#commit-message-with-description-and-breaking-change-footer","text":"feat: allow provided config object to extend other configs BREAKING CHANGE: `extends` key in config file is now used for extending other config files","title":"Commit message with description and breaking change footer"},{"location":"user_guide/COVENTIONAL_COMMITS/#commit-message-with-to-draw-attention-to-breaking-change","text":"feat!: send an email to the customer when a product is shipped","title":"Commit message with ! to draw attention to breaking change"},{"location":"user_guide/COVENTIONAL_COMMITS/#commit-message-with-scope-and-to-draw-attention-to-breaking-change","text":"feat(api)!: send an email to the customer when a product is shipped","title":"Commit message with scope and ! to draw attention to breaking change"},{"location":"user_guide/COVENTIONAL_COMMITS/#commit-message-with-both-and-breaking-change-footer","text":"chore!: drop support for Python 2.6 BREAKING CHANGE: Some features not available in Python 2.7-.","title":"Commit message with both ! and BREAKING CHANGE footer"},{"location":"user_guide/COVENTIONAL_COMMITS/#commit-message-with-no-body","text":"docs: correct spelling of CHANGELOG","title":"Commit message with no body"},{"location":"user_guide/COVENTIONAL_COMMITS/#commit-message-with-scope","text":"feat(lang): add polish language","title":"Commit message with scope"},{"location":"user_guide/COVENTIONAL_COMMITS/#commit-message-with-multi-paragraph-body-and-multiple-footers","text":"fix: prevent racing of requests Introduce a request id and a reference to latest request. Dismiss incoming responses other than from latest request. Remove timeouts which were used to mitigate the racing issue but are obsolete now. Reviewed-by: @britodfbr Refs: #123 The full specification maybe access on english lang or others languages about Brazilian Portuguese .","title":"Commit message with multi-paragraph body and multiple footers"},{"location":"user_guide/INSTALLATION/","text":"Guia de Uso Instala\u00e7\u00e3o To install it using poetry: More detail can be see in Python Poetry: Gerenciando depend\u00eancias de projeto Last package version from pypi.org: poetry add incolume.py.model-2023-07-05 Download package wheel: poetry add incolume.py.model-2023-07-05-1.0.0-py3-none-any.whl Download package tar.gz: poetry add incolume.py.model-2023-07-05-1.0.0.tar.gz Last package version from git repo: poetry add git+https://gitlab.com/development-incolume/incolume.py.model-2023-07-05.git@master Specific version from git repo: poetry add git+https://gitlab.com/development-incolume/incolume.py.model-2023-07-05.git@\"1.0.0\" Specific branch from git repo: poetry add git+https://gitlab.com/development-incolume/incolume.py.model-2023-07-05.git@\"enhacement/epoch#16800000\" To install incolumepy.lex, using pip: pip install incolume.py.model-2023-07-05 Detalhes da API Dispon\u00edvel em docs/api Detalhes para desenvolvimento Dispon\u00edvel em docs/user_guide/development.md","title":"Guia de Uso"},{"location":"user_guide/INSTALLATION/#guia-de-uso","text":"","title":"Guia de Uso"},{"location":"user_guide/INSTALLATION/#instalacao","text":"To install it using poetry: More detail can be see in Python Poetry: Gerenciando depend\u00eancias de projeto Last package version from pypi.org: poetry add incolume.py.model-2023-07-05 Download package wheel: poetry add incolume.py.model-2023-07-05-1.0.0-py3-none-any.whl Download package tar.gz: poetry add incolume.py.model-2023-07-05-1.0.0.tar.gz Last package version from git repo: poetry add git+https://gitlab.com/development-incolume/incolume.py.model-2023-07-05.git@master Specific version from git repo: poetry add git+https://gitlab.com/development-incolume/incolume.py.model-2023-07-05.git@\"1.0.0\" Specific branch from git repo: poetry add git+https://gitlab.com/development-incolume/incolume.py.model-2023-07-05.git@\"enhacement/epoch#16800000\" To install incolumepy.lex, using pip: pip install incolume.py.model-2023-07-05","title":"Instala\u00e7\u00e3o"},{"location":"user_guide/INSTALLATION/#detalhes-da-api","text":"Dispon\u00edvel em docs/api","title":"Detalhes da API"},{"location":"user_guide/INSTALLATION/#detalhes-para-desenvolvimento","text":"Dispon\u00edvel em docs/user_guide/development.md","title":"Detalhes para desenvolvimento"},{"location":"user_guide/code_of_conduct/","text":"C\u00f3digo de Conduta do Contribuinte Nosso Compromisso N\u00f3s, como membros, colaboradores e l\u00edderes, nos comprometemos a fazer a participa\u00e7\u00e3o em nosso comunidade uma experi\u00eancia livre de ass\u00e9dio para todos, independentemente da idade, corpo tamanho, defici\u00eancia vis\u00edvel ou invis\u00edvel, etnia, caracter\u00edsticas sexuais, g\u00eanero identidade e express\u00e3o, n\u00edvel de experi\u00eancia, educa\u00e7\u00e3o, status socioecon\u00f4mico, nacionalidade, apar\u00eancia pessoal, ra\u00e7a, casta, cor, religi\u00e3o ou identidade e orienta\u00e7\u00e3o. Comprometemo-nos a agir e interagir de forma a contribuir para um ambiente aberto, acolhedor, comunidade diversificada, inclusiva e saud\u00e1vel. Nossos padr\u00f5es Exemplos de comportamentos que contribuem para um ambiente positivo para os nossos comunidade incluem: Demonstrar empatia e bondade para com outras pessoas Ser respeitoso com as diferentes opini\u00f5es, pontos de vista e experi\u00eancias Dar e aceitar graciosamente feedback construtivo Aceitar a responsabilidade e pedir desculpas aos afetados por nossos erros, e aprendendo com a experi\u00eancia Concentrar-se no que \u00e9 melhor n\u00e3o apenas para n\u00f3s como indiv\u00edduos, mas para o geral comunidade Exemplos de comportamento inaceit\u00e1vel incluem: O uso de linguagem ou imagens sexualizadas e aten\u00e7\u00e3o sexual ou avan\u00e7os de qualquer tipo Trolling, coment\u00e1rios insultuosos ou depreciativos e ataques pessoais ou pol\u00edticos Ass\u00e9dio p\u00fablico ou privado Publicar informa\u00e7\u00f5es privadas de outras pessoas, como endere\u00e7o f\u00edsico ou de e-mail, sem sua permiss\u00e3o expl\u00edcita Outras condutas que possam ser razoavelmente consideradas inadequadas em um ambiente profissional Responsabilidades de Execu\u00e7\u00e3o Os l\u00edderes comunit\u00e1rios s\u00e3o respons\u00e1veis por esclarecer e fazer cumprir nossos padr\u00f5es de comportamento aceit\u00e1vel e tomar\u00e1 as medidas corretivas apropriadas e justas resposta a qualquer comportamento que considerem inadequado, amea\u00e7ador, ofensivo, ou prejudicial. Os l\u00edderes da comunidade t\u00eam o direito e a responsabilidade de remover, editar ou rejeitar coment\u00e1rios, commits, c\u00f3digo, edi\u00e7\u00f5es wiki, quest\u00f5es e outras contribui\u00e7\u00f5es que s\u00e3o n\u00e3o alinhado a este C\u00f3digo de Conduta, e comunicar\u00e1 os motivos da modera\u00e7\u00e3o decis\u00f5es quando apropriado. Alcance Este C\u00f3digo de Conduta aplica-se a todos os espa\u00e7os comunit\u00e1rios e tamb\u00e9m quando um indiv\u00edduo est\u00e1 representando oficialmente a comunidade em espa\u00e7os p\u00fablicos. Exemplos de representa\u00e7\u00e3o de nossa comunidade incluem o uso de um endere\u00e7o de e-mail oficial, postar por meio de uma conta oficial de m\u00eddia social ou agindo como um representante em um evento online ou offline. Aplica\u00e7\u00e3o Casos de comportamento abusivo, de ass\u00e9dio ou de outra forma inaceit\u00e1vel podem ser reportado aos l\u00edderes comunit\u00e1rios respons\u00e1veis pela fiscaliza\u00e7\u00e3o contato@incolume.com.br . Todas as reclama\u00e7\u00f5es ser\u00e3o analisadas e investigadas prontamente e de forma justa. Todos os l\u00edderes comunit\u00e1rios s\u00e3o obrigados a respeitar a privacidade e a seguran\u00e7a do relator de qualquer incidente. Diretrizes de aplica\u00e7\u00e3o Os l\u00edderes comunit\u00e1rios seguir\u00e3o estas Diretrizes de Impacto na Comunidade para determinar as consequ\u00eancias de qualquer a\u00e7\u00e3o que considerem violar este C\u00f3digo de Conduta: 1. Corre\u00e7\u00e3o Impacto na comunidade : uso de linguagem impr\u00f3pria ou outro comportamento considerado pouco profissional ou indesej\u00e1vel na comunidade. Consequ\u00eancia : Uma advert\u00eancia privada por escrito dos l\u00edderes comunit\u00e1rios, fornecendo clareza sobre a natureza da viola\u00e7\u00e3o e uma explica\u00e7\u00e3o de por que o comportamento era inadequado. Um pedido de desculpas p\u00fablico pode ser solicitado. 2. Aviso Impacto na comunidade : uma viola\u00e7\u00e3o por meio de um \u00fanico incidente ou s\u00e9rie de a\u00e7\u00f5es. Consequ\u00eancia : um aviso com consequ\u00eancias para o comportamento continuado. N\u00e3o intera\u00e7\u00e3o com as pessoas envolvidas, incluindo intera\u00e7\u00e3o n\u00e3o solicitada com aqueles que aplicam o C\u00f3digo de Conduta, por um per\u00edodo de tempo especificado. Isto inclui evitar intera\u00e7\u00f5es em espa\u00e7os comunit\u00e1rios, bem como canais externos como as redes sociais. A viola\u00e7\u00e3o destes termos pode levar a uma suspens\u00e3o tempor\u00e1ria ou permanente banimento. 3. Banimento Tempor\u00e1rio Impacto na comunidade : uma viola\u00e7\u00e3o grave dos padr\u00f5es da comunidade, incluindo comportamento inadequado sustentado. Consequ\u00eancia : banimento tempor\u00e1rio de qualquer tipo de intera\u00e7\u00e3o ou p\u00fablico comunica\u00e7\u00e3o com a comunidade por um determinado per\u00edodo de tempo. Nenhum p\u00fablico ou intera\u00e7\u00e3o privada com as pessoas envolvidas, incluindo intera\u00e7\u00e3o n\u00e3o solicitada com aqueles que aplicam o C\u00f3digo de Conduta, \u00e9 permitido durante este per\u00edodo. A viola\u00e7\u00e3o destes termos pode levar a um banimento permanente. 4. Banimento Permanente Impacto na comunidade : Demonstrando um padr\u00e3o de viola\u00e7\u00e3o da comunidade padr\u00f5es, incluindo comportamento inadequado sustentado, ass\u00e9dio de um indiv\u00edduo, ou agress\u00e3o ou deprecia\u00e7\u00e3o de classes de indiv\u00edduos. Consequ\u00eancia : banimento permanente de qualquer tipo de intera\u00e7\u00e3o p\u00fablica dentro do comunidade. Atribui\u00e7\u00e3o Este C\u00f3digo de Conduta \u00e9 adaptado do Contributor Covenant , vers\u00e3o 2.1, dispon\u00edvel em https://www.contributor-covenant.org/version/2/1/code_of_conduct.html . As Diretrizes de Impacto na Comunidade foram inspiradas por Escada de aplica\u00e7\u00e3o do c\u00f3digo de conduta da Mozilla . Para obter respostas a perguntas comuns sobre este c\u00f3digo de conduta, consulte as Perguntas frequentes em https://www.contributor-covenant.org/faq . As tradu\u00e7\u00f5es est\u00e3o dispon\u00edveis em https://www.contributor-covenant.org/translations .","title":"C\u00f3digo de Conduta do Contribuinte"},{"location":"user_guide/code_of_conduct/#codigo-de-conduta-do-contribuinte","text":"","title":"C\u00f3digo de Conduta do Contribuinte"},{"location":"user_guide/code_of_conduct/#nosso-compromisso","text":"N\u00f3s, como membros, colaboradores e l\u00edderes, nos comprometemos a fazer a participa\u00e7\u00e3o em nosso comunidade uma experi\u00eancia livre de ass\u00e9dio para todos, independentemente da idade, corpo tamanho, defici\u00eancia vis\u00edvel ou invis\u00edvel, etnia, caracter\u00edsticas sexuais, g\u00eanero identidade e express\u00e3o, n\u00edvel de experi\u00eancia, educa\u00e7\u00e3o, status socioecon\u00f4mico, nacionalidade, apar\u00eancia pessoal, ra\u00e7a, casta, cor, religi\u00e3o ou identidade e orienta\u00e7\u00e3o. Comprometemo-nos a agir e interagir de forma a contribuir para um ambiente aberto, acolhedor, comunidade diversificada, inclusiva e saud\u00e1vel.","title":"Nosso Compromisso"},{"location":"user_guide/code_of_conduct/#nossos-padroes","text":"Exemplos de comportamentos que contribuem para um ambiente positivo para os nossos comunidade incluem: Demonstrar empatia e bondade para com outras pessoas Ser respeitoso com as diferentes opini\u00f5es, pontos de vista e experi\u00eancias Dar e aceitar graciosamente feedback construtivo Aceitar a responsabilidade e pedir desculpas aos afetados por nossos erros, e aprendendo com a experi\u00eancia Concentrar-se no que \u00e9 melhor n\u00e3o apenas para n\u00f3s como indiv\u00edduos, mas para o geral comunidade Exemplos de comportamento inaceit\u00e1vel incluem: O uso de linguagem ou imagens sexualizadas e aten\u00e7\u00e3o sexual ou avan\u00e7os de qualquer tipo Trolling, coment\u00e1rios insultuosos ou depreciativos e ataques pessoais ou pol\u00edticos Ass\u00e9dio p\u00fablico ou privado Publicar informa\u00e7\u00f5es privadas de outras pessoas, como endere\u00e7o f\u00edsico ou de e-mail, sem sua permiss\u00e3o expl\u00edcita Outras condutas que possam ser razoavelmente consideradas inadequadas em um ambiente profissional","title":"Nossos padr\u00f5es"},{"location":"user_guide/code_of_conduct/#responsabilidades-de-execucao","text":"Os l\u00edderes comunit\u00e1rios s\u00e3o respons\u00e1veis por esclarecer e fazer cumprir nossos padr\u00f5es de comportamento aceit\u00e1vel e tomar\u00e1 as medidas corretivas apropriadas e justas resposta a qualquer comportamento que considerem inadequado, amea\u00e7ador, ofensivo, ou prejudicial. Os l\u00edderes da comunidade t\u00eam o direito e a responsabilidade de remover, editar ou rejeitar coment\u00e1rios, commits, c\u00f3digo, edi\u00e7\u00f5es wiki, quest\u00f5es e outras contribui\u00e7\u00f5es que s\u00e3o n\u00e3o alinhado a este C\u00f3digo de Conduta, e comunicar\u00e1 os motivos da modera\u00e7\u00e3o decis\u00f5es quando apropriado.","title":"Responsabilidades de Execu\u00e7\u00e3o"},{"location":"user_guide/code_of_conduct/#alcance","text":"Este C\u00f3digo de Conduta aplica-se a todos os espa\u00e7os comunit\u00e1rios e tamb\u00e9m quando um indiv\u00edduo est\u00e1 representando oficialmente a comunidade em espa\u00e7os p\u00fablicos. Exemplos de representa\u00e7\u00e3o de nossa comunidade incluem o uso de um endere\u00e7o de e-mail oficial, postar por meio de uma conta oficial de m\u00eddia social ou agindo como um representante em um evento online ou offline.","title":"Alcance"},{"location":"user_guide/code_of_conduct/#aplicacao","text":"Casos de comportamento abusivo, de ass\u00e9dio ou de outra forma inaceit\u00e1vel podem ser reportado aos l\u00edderes comunit\u00e1rios respons\u00e1veis pela fiscaliza\u00e7\u00e3o contato@incolume.com.br . Todas as reclama\u00e7\u00f5es ser\u00e3o analisadas e investigadas prontamente e de forma justa. Todos os l\u00edderes comunit\u00e1rios s\u00e3o obrigados a respeitar a privacidade e a seguran\u00e7a do relator de qualquer incidente.","title":"Aplica\u00e7\u00e3o"},{"location":"user_guide/code_of_conduct/#diretrizes-de-aplicacao","text":"Os l\u00edderes comunit\u00e1rios seguir\u00e3o estas Diretrizes de Impacto na Comunidade para determinar as consequ\u00eancias de qualquer a\u00e7\u00e3o que considerem violar este C\u00f3digo de Conduta:","title":"Diretrizes de aplica\u00e7\u00e3o"},{"location":"user_guide/code_of_conduct/#1-correcao","text":"Impacto na comunidade : uso de linguagem impr\u00f3pria ou outro comportamento considerado pouco profissional ou indesej\u00e1vel na comunidade. Consequ\u00eancia : Uma advert\u00eancia privada por escrito dos l\u00edderes comunit\u00e1rios, fornecendo clareza sobre a natureza da viola\u00e7\u00e3o e uma explica\u00e7\u00e3o de por que o comportamento era inadequado. Um pedido de desculpas p\u00fablico pode ser solicitado.","title":"1. Corre\u00e7\u00e3o"},{"location":"user_guide/code_of_conduct/#2-aviso","text":"Impacto na comunidade : uma viola\u00e7\u00e3o por meio de um \u00fanico incidente ou s\u00e9rie de a\u00e7\u00f5es. Consequ\u00eancia : um aviso com consequ\u00eancias para o comportamento continuado. N\u00e3o intera\u00e7\u00e3o com as pessoas envolvidas, incluindo intera\u00e7\u00e3o n\u00e3o solicitada com aqueles que aplicam o C\u00f3digo de Conduta, por um per\u00edodo de tempo especificado. Isto inclui evitar intera\u00e7\u00f5es em espa\u00e7os comunit\u00e1rios, bem como canais externos como as redes sociais. A viola\u00e7\u00e3o destes termos pode levar a uma suspens\u00e3o tempor\u00e1ria ou permanente banimento.","title":"2. Aviso"},{"location":"user_guide/code_of_conduct/#3-banimento-temporario","text":"Impacto na comunidade : uma viola\u00e7\u00e3o grave dos padr\u00f5es da comunidade, incluindo comportamento inadequado sustentado. Consequ\u00eancia : banimento tempor\u00e1rio de qualquer tipo de intera\u00e7\u00e3o ou p\u00fablico comunica\u00e7\u00e3o com a comunidade por um determinado per\u00edodo de tempo. Nenhum p\u00fablico ou intera\u00e7\u00e3o privada com as pessoas envolvidas, incluindo intera\u00e7\u00e3o n\u00e3o solicitada com aqueles que aplicam o C\u00f3digo de Conduta, \u00e9 permitido durante este per\u00edodo. A viola\u00e7\u00e3o destes termos pode levar a um banimento permanente.","title":"3. Banimento Tempor\u00e1rio"},{"location":"user_guide/code_of_conduct/#4-banimento-permanente","text":"Impacto na comunidade : Demonstrando um padr\u00e3o de viola\u00e7\u00e3o da comunidade padr\u00f5es, incluindo comportamento inadequado sustentado, ass\u00e9dio de um indiv\u00edduo, ou agress\u00e3o ou deprecia\u00e7\u00e3o de classes de indiv\u00edduos. Consequ\u00eancia : banimento permanente de qualquer tipo de intera\u00e7\u00e3o p\u00fablica dentro do comunidade.","title":"4. Banimento Permanente"},{"location":"user_guide/code_of_conduct/#atribuicao","text":"Este C\u00f3digo de Conduta \u00e9 adaptado do Contributor Covenant , vers\u00e3o 2.1, dispon\u00edvel em https://www.contributor-covenant.org/version/2/1/code_of_conduct.html . As Diretrizes de Impacto na Comunidade foram inspiradas por Escada de aplica\u00e7\u00e3o do c\u00f3digo de conduta da Mozilla . Para obter respostas a perguntas comuns sobre este c\u00f3digo de conduta, consulte as Perguntas frequentes em https://www.contributor-covenant.org/faq . As tradu\u00e7\u00f5es est\u00e3o dispon\u00edveis em https://www.contributor-covenant.org/translations .","title":"Atribui\u00e7\u00e3o"},{"location":"user_guide/development/","text":"Guia de contribu\u00ed\u00e7\u00e3o (Desenvolvimento) O desenvolvimento deste projeto segue algumas regras e conven\u00e7\u00f5es b\u00e1sicas. Como estilo de formata\u00e7\u00e3o de c\u00f3digo , C\u00f3digo de conduta Detalhes em docs/user_guide/code_of_conduct.md . Padr\u00f5es aplicados Este projeto segue as recomenda\u00e7\u00f5es descritas em Tecnologias e Conven\u00e7\u00f5es Adotadas. Prerequisitos Sistema Operacional Linux Like (preferencialmente) ou WSL git client python 3.10+ pyenv poetry 1.2.0+ (preferencialmente) ou pip Iniciando ambiente de desenvolvimento Para definir a vers\u00e3o do Python para o ambiente, considerando o uso do poetry, e instalar as depend\u00eancias execute os comandos abaixo: $ poetry env use 3.10 $ poetry install Estes comandos criar\u00e3o um ambiente virtual em Python, na vers\u00e3o especificada, apresentada no exemplo como 3.10, e instalar\u00e1 todas as depend\u00eancias fixadas em pyproject.toml com suas restri\u00e7\u00f5es especificadas em poetry.lock . Ap\u00f3s o ambiente criado com suas depend\u00eancias instaladas, execute o comando: $ poetry run task setup Este comando garantir\u00e1 que os hooks do projeto sejam ativados, e executados nos eventos apropriados. Qualidade de C\u00f3digo \u00c9 utilizado de ferramentas validadoras de qualidade de c\u00f3digo est\u00e1tico, tamb\u00e9m denominadas linters. H\u00e1 uso das seguintes: black / blue isort mypy pydocstyle pylint Seguran\u00e7a Tamb\u00e9m h\u00e1 preocupa\u00e7\u00e3o com a seguran\u00e7a do c\u00f3digo implementado, os pacotes bandit e safety s\u00e3o utilizados para monitoramento de seguran\u00e7a das depend\u00eancias. bandit Bandit \u00e9 uma ferramenta projetada para encontrar problemas de seguran\u00e7a comuns no c\u00f3digo Python. Para fazer isso, o Bandit processa cada arquivo, cria um AST a partir dele e executa os plug-ins apropriados nos nodos do AST. Depois que o Bandit terminar de escanear todos os arquivos, ele gerar\u00e1 um relat\u00f3rio. bandit -c pyproject.toml -r incolume/ test/ black O black \u00e9 classificado como Autoformator, s\u00e3o programas que refatoram seu c\u00f3digo para se adequar ao PEP 8 automaticamente. black --check incolume/ tests/ blue o blue \u00e9 um autoformatador de c\u00f3digo um pouco menos intransigente do que o black, e segue a ideia de formatar automaticamente o c\u00f3digo Python, totalmente inspirada pelo black. blue --check incolume/ tests/ flake8 Flake8 \u00e9 um envolucro em torno das ferramentas: PyFlakes, pycodestyle e Roteiro McCabe de Ned Batchelder flake8 --config pyproject.toml incolume/ tests/ pylama O pylama \u00e9 um envolucro que cont\u00e9m: PyFlakes, pycodestyle, McCabe. pylama incolumepy tests isort O isort \u00e9 um utilit\u00e1rio para classificar as importa\u00e7\u00f5es em ordem alfab\u00e9tica e separadas automaticamente em se\u00e7\u00f5es e por tipo. isort incolumepy tests mypy O Mypy \u00e9 essencialmente um analizador de c\u00f3digo est\u00e1tico melhorado e com verificador de tipos, que pode detectar muitos erros de programa\u00e7\u00e3o analisando o c\u00f3digo, sem precisar execut\u00e1-lo. Ele possui um poderoso sistema de tipos com recursos como infer\u00eancia de tipos, digita\u00e7\u00e3o gradual, gen\u00e9ricos e tipos de uni\u00e3o. mypy incolumepy pydocstyle O pydocstyle \u00e9 uma ferramenta de an\u00e1lise est\u00e1tica para verificar a conformidade com as conven\u00e7\u00f5es docstring do Python. Ele suporta a maior parte do PEP 257, entretanto n\u00e3o deve ser considerado uma implementa\u00e7\u00e3o de refer\u00eancia. pydocstyle incolumepy tests pylint O Pylint \u00e9 uma ferramenta de an\u00e1lise de c\u00f3digo est\u00e1tico do Python que procura erros de programa\u00e7\u00e3o, ajuda a impor um padr\u00e3o de codifica\u00e7\u00e3o, detecta cheiros de c\u00f3digo e oferece sugest\u00f5es simples de refatora\u00e7\u00e3o. \u00c9 altamente configur\u00e1vel, possuindo pragmas especiais para controlar seus erros e avisos de dentro do seu c\u00f3digo, bem como de um extenso arquivo de configura\u00e7\u00e3o. Tamb\u00e9m \u00e9 poss\u00edvel escrever seus pr\u00f3prios plugins para adicionar suas pr\u00f3prias verifica\u00e7\u00f5es ou para estender o pylint de uma forma ou de outra. pylint incolumepy tests safety O safety verifica as depend\u00eancias instaladas quanto a vulnerabilidades de seguran\u00e7a conhecidas. Por padr\u00e3o, ele usa o banco de dados de vulnerabilidades Python aberto Safety DB . safety check Ferramentas de Automa\u00e7\u00e3o Para facilitar o trabalho, v\u00e1rias das tarefas est\u00e3o automatizadas pelo githooks, e/ou Makefile, e/ou tox e/ou taskipy. Tox Verifica\u00e7\u00e3o b\u00e1sica Na Verifica\u00e7\u00e3o b\u00e1sica engloba: - black - blue - isort - pydocstyle - mypy - pylint - py310 - py311 tox Verifica\u00e7\u00e3o dos testes com as vers\u00f5es python dispon\u00edveis tox -e py310,py311 Verifica\u00e7\u00e3o de tr\u00eas linters apenas no em um m\u00f3dulo tox -e pydocstyle,black,isort -- -k incolume/py/pack/module.py Verifica\u00e7\u00e3o de todos os linters configurados tox -e linters Verifica\u00e7\u00e3o e relat\u00f3rio de cobertura tox -e stats Verifica\u00e7\u00e3o resumida de seguran\u00e7a tox -e safety Execu\u00e7\u00e3o completa Executa todas as verifica\u00e7\u00f5es dipon\u00edveis contidas no tox . tox -e ALL Makefile O Makefile foi personalizado para rodar com as op\u00e7\u00f5es necess\u00e1rias. Com o help voc\u00ea ver\u00e1 todas as op\u00e7\u00f5es. Este comando \u00e9 exclusivo para linux like. make help Iniciar ambiente dev Atrav\u00e9s do Makefile , pode-se criar um ambiente virtual para o projeto, conforme a vers\u00e3o python predefinida, instalando todas as depend\u00eancias necess\u00e1rias, al\u00e9m de ativar as configura\u00e7\u00f5es em passos simples. make setup Limpeza b\u00e1sica do ambiente Limpeza de arquivos tempor\u00e1rios, logs, compilados e afins. make clean Limpeza profunda do ambiente Al\u00e9m da limpeza b\u00e1sica, s\u00e3o removidos dist, build, htmlcov, .tox, *_cache, e outros conte\u00fados gerados pelas ferramentas de desenvolvimento. make clean-all Gerar a documenta\u00e7\u00e3o atualizada make docsgen Verifica\u00e7\u00e3o de seguran\u00e7a e exposi\u00e7\u00e3o de motivos make safety Taskipy Com taskipy as tarefas s\u00e3o definidas puramente com Python em um arquivo e pode-se executar rotinas complexas com comandos simples. $ poetry run task -l bandit poetry run bandit -c pyproject.toml -r incolume/ test/ check-all Checking all clean Shallow clean into environment (.pyc, .cache, .egg, .log, et all) clean-all Deep cleanning into environment (dist, build, htmlcov, .tox, *_cache, et all) docs-build Generate documentation docs-serve Run server documentation lint Checking all linters configurated lint_black Checking with black lint_blue Checking with blue lint_flake8 Checking with flake8 lint_isort Checking with isort lint_mypy Checking with mypy lint_pydocstyle Checking with pydocstyle lint_pylint Checking with pylint patch Generate a patch Sematic Version premajor poetry version premajor preminor poetry version preminor prerelease poetry version prerelease safety Check safety of packages into project. sec Checking environment's safety changelog Update changelog file setup Configure environment develop","title":"Guia de contribu\u00ed\u00e7\u00e3o (Desenvolvimento)"},{"location":"user_guide/development/#guia-de-contribuicao-desenvolvimento","text":"O desenvolvimento deste projeto segue algumas regras e conven\u00e7\u00f5es b\u00e1sicas. Como estilo de formata\u00e7\u00e3o de c\u00f3digo ,","title":"Guia de contribu\u00ed\u00e7\u00e3o (Desenvolvimento)"},{"location":"user_guide/development/#codigo-de-conduta","text":"Detalhes em docs/user_guide/code_of_conduct.md .","title":"C\u00f3digo de conduta"},{"location":"user_guide/development/#padroes-aplicados","text":"Este projeto segue as recomenda\u00e7\u00f5es descritas em Tecnologias e Conven\u00e7\u00f5es Adotadas.","title":"Padr\u00f5es aplicados"},{"location":"user_guide/development/#prerequisitos","text":"Sistema Operacional Linux Like (preferencialmente) ou WSL git client python 3.10+ pyenv poetry 1.2.0+ (preferencialmente) ou pip","title":"Prerequisitos"},{"location":"user_guide/development/#iniciando-ambiente-de-desenvolvimento","text":"Para definir a vers\u00e3o do Python para o ambiente, considerando o uso do poetry, e instalar as depend\u00eancias execute os comandos abaixo: $ poetry env use 3.10 $ poetry install Estes comandos criar\u00e3o um ambiente virtual em Python, na vers\u00e3o especificada, apresentada no exemplo como 3.10, e instalar\u00e1 todas as depend\u00eancias fixadas em pyproject.toml com suas restri\u00e7\u00f5es especificadas em poetry.lock . Ap\u00f3s o ambiente criado com suas depend\u00eancias instaladas, execute o comando: $ poetry run task setup Este comando garantir\u00e1 que os hooks do projeto sejam ativados, e executados nos eventos apropriados.","title":"Iniciando ambiente de desenvolvimento"},{"location":"user_guide/development/#qualidade-de-codigo","text":"\u00c9 utilizado de ferramentas validadoras de qualidade de c\u00f3digo est\u00e1tico, tamb\u00e9m denominadas linters. H\u00e1 uso das seguintes: black / blue isort mypy pydocstyle pylint","title":"Qualidade de C\u00f3digo"},{"location":"user_guide/development/#seguranca","text":"Tamb\u00e9m h\u00e1 preocupa\u00e7\u00e3o com a seguran\u00e7a do c\u00f3digo implementado, os pacotes bandit e safety s\u00e3o utilizados para monitoramento de seguran\u00e7a das depend\u00eancias.","title":"Seguran\u00e7a"},{"location":"user_guide/development/#bandit","text":"Bandit \u00e9 uma ferramenta projetada para encontrar problemas de seguran\u00e7a comuns no c\u00f3digo Python. Para fazer isso, o Bandit processa cada arquivo, cria um AST a partir dele e executa os plug-ins apropriados nos nodos do AST. Depois que o Bandit terminar de escanear todos os arquivos, ele gerar\u00e1 um relat\u00f3rio. bandit -c pyproject.toml -r incolume/ test/","title":"bandit"},{"location":"user_guide/development/#black","text":"O black \u00e9 classificado como Autoformator, s\u00e3o programas que refatoram seu c\u00f3digo para se adequar ao PEP 8 automaticamente. black --check incolume/ tests/","title":"black"},{"location":"user_guide/development/#blue","text":"o blue \u00e9 um autoformatador de c\u00f3digo um pouco menos intransigente do que o black, e segue a ideia de formatar automaticamente o c\u00f3digo Python, totalmente inspirada pelo black. blue --check incolume/ tests/","title":"blue"},{"location":"user_guide/development/#flake8","text":"Flake8 \u00e9 um envolucro em torno das ferramentas: PyFlakes, pycodestyle e Roteiro McCabe de Ned Batchelder flake8 --config pyproject.toml incolume/ tests/","title":"flake8"},{"location":"user_guide/development/#pylama","text":"O pylama \u00e9 um envolucro que cont\u00e9m: PyFlakes, pycodestyle, McCabe. pylama incolumepy tests","title":"pylama"},{"location":"user_guide/development/#isort","text":"O isort \u00e9 um utilit\u00e1rio para classificar as importa\u00e7\u00f5es em ordem alfab\u00e9tica e separadas automaticamente em se\u00e7\u00f5es e por tipo. isort incolumepy tests","title":"isort"},{"location":"user_guide/development/#mypy","text":"O Mypy \u00e9 essencialmente um analizador de c\u00f3digo est\u00e1tico melhorado e com verificador de tipos, que pode detectar muitos erros de programa\u00e7\u00e3o analisando o c\u00f3digo, sem precisar execut\u00e1-lo. Ele possui um poderoso sistema de tipos com recursos como infer\u00eancia de tipos, digita\u00e7\u00e3o gradual, gen\u00e9ricos e tipos de uni\u00e3o. mypy incolumepy","title":"mypy"},{"location":"user_guide/development/#pydocstyle","text":"O pydocstyle \u00e9 uma ferramenta de an\u00e1lise est\u00e1tica para verificar a conformidade com as conven\u00e7\u00f5es docstring do Python. Ele suporta a maior parte do PEP 257, entretanto n\u00e3o deve ser considerado uma implementa\u00e7\u00e3o de refer\u00eancia. pydocstyle incolumepy tests","title":"pydocstyle"},{"location":"user_guide/development/#pylint","text":"O Pylint \u00e9 uma ferramenta de an\u00e1lise de c\u00f3digo est\u00e1tico do Python que procura erros de programa\u00e7\u00e3o, ajuda a impor um padr\u00e3o de codifica\u00e7\u00e3o, detecta cheiros de c\u00f3digo e oferece sugest\u00f5es simples de refatora\u00e7\u00e3o. \u00c9 altamente configur\u00e1vel, possuindo pragmas especiais para controlar seus erros e avisos de dentro do seu c\u00f3digo, bem como de um extenso arquivo de configura\u00e7\u00e3o. Tamb\u00e9m \u00e9 poss\u00edvel escrever seus pr\u00f3prios plugins para adicionar suas pr\u00f3prias verifica\u00e7\u00f5es ou para estender o pylint de uma forma ou de outra. pylint incolumepy tests","title":"pylint"},{"location":"user_guide/development/#safety","text":"O safety verifica as depend\u00eancias instaladas quanto a vulnerabilidades de seguran\u00e7a conhecidas. Por padr\u00e3o, ele usa o banco de dados de vulnerabilidades Python aberto Safety DB . safety check","title":"safety"},{"location":"user_guide/development/#ferramentas-de-automacao","text":"Para facilitar o trabalho, v\u00e1rias das tarefas est\u00e3o automatizadas pelo githooks, e/ou Makefile, e/ou tox e/ou taskipy.","title":"Ferramentas de Automa\u00e7\u00e3o"},{"location":"user_guide/development/#tox","text":"","title":"Tox"},{"location":"user_guide/development/#verificacao-basica","text":"Na Verifica\u00e7\u00e3o b\u00e1sica engloba: - black - blue - isort - pydocstyle - mypy - pylint - py310 - py311 tox","title":"Verifica\u00e7\u00e3o b\u00e1sica"},{"location":"user_guide/development/#verificacao-dos-testes-com-as-versoes-python-disponiveis","text":"tox -e py310,py311","title":"Verifica\u00e7\u00e3o dos testes com as vers\u00f5es python dispon\u00edveis"},{"location":"user_guide/development/#verificacao-de-tres-linters-apenas-no-em-um-modulo","text":"tox -e pydocstyle,black,isort -- -k incolume/py/pack/module.py","title":"Verifica\u00e7\u00e3o de tr\u00eas linters apenas no em um m\u00f3dulo"},{"location":"user_guide/development/#verificacao-de-todos-os-linters-configurados","text":"tox -e linters","title":"Verifica\u00e7\u00e3o de todos os linters configurados"},{"location":"user_guide/development/#verificacao-e-relatorio-de-cobertura","text":"tox -e stats","title":"Verifica\u00e7\u00e3o e relat\u00f3rio de cobertura"},{"location":"user_guide/development/#verificacao-resumida-de-seguranca","text":"tox -e safety","title":"Verifica\u00e7\u00e3o resumida de seguran\u00e7a"},{"location":"user_guide/development/#execucao-completa","text":"Executa todas as verifica\u00e7\u00f5es dipon\u00edveis contidas no tox . tox -e ALL","title":"Execu\u00e7\u00e3o completa"},{"location":"user_guide/development/#makefile","text":"O Makefile foi personalizado para rodar com as op\u00e7\u00f5es necess\u00e1rias. Com o help voc\u00ea ver\u00e1 todas as op\u00e7\u00f5es. Este comando \u00e9 exclusivo para linux like. make help","title":"Makefile"},{"location":"user_guide/development/#iniciar-ambiente-dev","text":"Atrav\u00e9s do Makefile , pode-se criar um ambiente virtual para o projeto, conforme a vers\u00e3o python predefinida, instalando todas as depend\u00eancias necess\u00e1rias, al\u00e9m de ativar as configura\u00e7\u00f5es em passos simples. make setup","title":"Iniciar ambiente dev"},{"location":"user_guide/development/#limpeza-basica-do-ambiente","text":"Limpeza de arquivos tempor\u00e1rios, logs, compilados e afins. make clean","title":"Limpeza b\u00e1sica do ambiente"},{"location":"user_guide/development/#limpeza-profunda-do-ambiente","text":"Al\u00e9m da limpeza b\u00e1sica, s\u00e3o removidos dist, build, htmlcov, .tox, *_cache, e outros conte\u00fados gerados pelas ferramentas de desenvolvimento. make clean-all","title":"Limpeza profunda do ambiente"},{"location":"user_guide/development/#gerar-a-documentacao-atualizada","text":"make docsgen","title":"Gerar a documenta\u00e7\u00e3o atualizada"},{"location":"user_guide/development/#verificacao-de-seguranca-e-exposicao-de-motivos","text":"make safety","title":"Verifica\u00e7\u00e3o de seguran\u00e7a e exposi\u00e7\u00e3o de motivos"},{"location":"user_guide/development/#taskipy","text":"Com taskipy as tarefas s\u00e3o definidas puramente com Python em um arquivo e pode-se executar rotinas complexas com comandos simples. $ poetry run task -l bandit poetry run bandit -c pyproject.toml -r incolume/ test/ check-all Checking all clean Shallow clean into environment (.pyc, .cache, .egg, .log, et all) clean-all Deep cleanning into environment (dist, build, htmlcov, .tox, *_cache, et all) docs-build Generate documentation docs-serve Run server documentation lint Checking all linters configurated lint_black Checking with black lint_blue Checking with blue lint_flake8 Checking with flake8 lint_isort Checking with isort lint_mypy Checking with mypy lint_pydocstyle Checking with pydocstyle lint_pylint Checking with pylint patch Generate a patch Sematic Version premajor poetry version premajor preminor poetry version preminor prerelease poetry version prerelease safety Check safety of packages into project. sec Checking environment's safety changelog Update changelog file setup Configure environment develop","title":"Taskipy"},{"location":"user_guide/usage/","text":"Coding Dojo Details for scope and tool . Start Use the model Access https://github.com/incolume-treinamentos/incolume.py.model-2023-07-05. Click on green button Use this template ; Bellow click on Create a new repository ; Fill the fields as you wish; finish the create a github project on github.com; Clone the project, on local host; Create the control's branches: bash $ git br main $ git br tags Configure environment: shell $ poetry env use 3.10 $ poetry install $ poetry run task setup Change configuration: Set a new project name and version: ```bash $ vim pyproject.toml [tool.poetry] name = \"incolume-py-model-2023-07-05\" version = 1.111.0 shell $ cat pyproject.toml [tool.poetry] name = \"incolume.py.abc\" version = 0.1.0 ``` rename path project: bash git mv incolume/py/model_2023_07_05/ incolume/py/abc Commit changes shell # the way wished $ git co -b enhancement/epoch#$(date +%s); $ git ci -m 'chore: #0 Atualiza\u00e7\u00e3o do projeto.' $ git co dev $ git merge --no-ff enhancement/epoch#0000000000000 $ poetry run task preminor $ poetry run task patch shell # easy way git ci -m 'chore: #0 Atualiza\u00e7\u00e3o do projeto.' poetry run task preminor poetry run task patch Commit changes Tests, Linters and Checkers For run tests: shell $ poetry run pytest # run all shell $ poetry run pytest -vv tests/test_skell.py::TestSkellCase::test_kwargs # run one $ poetry run pytest -vv tests/test_skell.py::TestSkellCase # run class $ poetry run pytest -vv tests/test_skell.py # run file For run linters: shell $ poetry run task linter === Configure pylint tool Edit pyproject.toml , add on end file. ```bash ... [tool.pylint.format] # Maximum number of characters on a single line. max-line-length = 160 [tool.pylint.basic] # Allow shorter and longer variable names than the default. argument-rgx = \"[a-z_][a-z0-9_] $\" attr-rgx = \"[a-z_][a-z0-9_] $\" variable-rgx = \"[a-z_][a-z0-9_]*$\" # Ensure that orjson is analysed as a C extension by pylint. extension-pkg-whitelist = \"orjson\" [tool.pylint.messages_control] disable = [ # Disable too many and too few checks. \"too-many-ancestors\", \"too-many-arguments\", \"too-many-boolean-expressions\", \"too-many-branches\", \"too-many-function-args\", \"too-many-instance-attributes\", \"too-many-lines\", \"too-many-locals\", \"too-many-nested-blocks\", \"too-many-public-methods\", \"too-many-return-statements\", \"too-many-statements\", \"too-few-public-methods\", # Similar lines in files (often the case in tests). \"duplicate-code\", # Many functions (e.g. callbacks) will naturally have unused arguments. \"unused-argument\", # Disable checking that method could be a function in classes (often used for organisation). \"no-self-use\", # Disable failure for TODO items in the codebase (code will always have TODOs). \"fixme\", # Disable docstrings checks as we don't require excessive documentation. \"missing-docstring\", \"no-member\", \"unspecified-encoding\", ] 2. Commit bash $ git ci -m \"Configure pylint tool\" pyproject.toml 4. Configure mypy tool 1. Edit _pyproject.toml_, add on end file. bash ... [tool.mypy] mypy_path = \"incolumepy\" check_untyped_defs = true disallow_any_generics = true ignore_missing_imports = true no_implicit_optional = true show_error_codes = true strict_equality = true warn_redundant_casts = true warn_return_any = true warn_unreachable = true warn_unused_configs = true no_implicit_reexport = true 2. Commit bash $ git ci -m \"Configure mypy tool\" pyproject.toml 5. Configure isort tool 1. Edit _pyproject.toml_, add on end file. bash ... [tool.isort] multi_line_output = 3 line_length = 160 include_trailing_comma = true 2. Commit bash $ git ci -m \"Configure isort tool\" pyproject.toml 6. Configure flake8 tool 1. Edit _pyproject.toml_, add on end file. bash ... [flake8] max-line-length = 160 2. Commit bash $ git ci -m \"Configure flake8 tool\" pyproject.toml 7. Configure black tool: 1. Edit _pyproject.toml_, add on end file. bash ... [tool.black] line_length = 160 2. Commit bash $ git ci -m \"Configure black tool\" pyproject.toml 8. Configure tox tool: 1. Edit _pyproject.toml_, add on end file. bash [tool.tox] legacy_tox_ini = \"\"\" [tox] minversion = 3.3.0 isolated_build = True envlist = black flake8 isort mypy pydocstyle pylint py{36,37,38,39,310} ;[tox:.package] ;basepython = python3 [testenv] whitelist_externals = poetry skip_install = true commands = poetry env use {envpython} poetry install -vv --no-root poetry run pytest {posargs} tests/ [testenv:flake8] deps = flake8 commands = flake8 --config pyproject.toml incolumepy/ tests/ [testenv:mypy] deps = mypy types-toml commands = mypy incolumepy/ [testenv:pydocstyle] commands = poetry run pydocstyle incolumepy/ tests/ [testenv:isort] commands = poetry run isort --check --atomic --py all incolumepy/ tests/ [testenv:pylint] commands = poetry run pylint incolumepy/ tests/ [testenv:black] commands = poetry run black --check incolumepy/ tests/ \"\"\" ``` 2. Commit ```bash $ git ci -m \"Configure tox tool\" pyproject.toml ``` Testting lint configurate Test pydocstyle: bash $ pydocstyle incolumepy/ tests/ Test pylint bash $ pylint incolumepy/ tests/ Test mypy bash $ mypy incolumepy/ tests/ Test isort bash $ isort --check incolumepy/ tests/ Test flake8 bash $ flake8 --config pyproject.toml incolumepy/ tests/ Test black bash $ black --check incolumepy/ tests/ Testting tox configurate Text tox bash $ tox Control version with poetry Unlike bumpversion, poetry changes the version of the main file only. To work around this situation and update the version of pyproject.toml, init .py and version.txt, we will do the following procedure. $ cat > incolumepy/gwa/__init__.py << eof import toml from pathlib import Path __root__ = Path(__file__).parents[0] version_file = __root__.joinpath('version.txt') version_file.write_text(f\"{toml.load(Path(__file__).parents[2].joinpath('pyproject.toml'))['tool']['poetry']['version']}\\n\") __version__ = version_file.read_text().strip() eof $ v=`poetry version prerelease`; pytest tests/ && git ci -m \"$v\" pyproject.toml $(find -name \"version.txt\") #sem tag $ s=`poetry version patch`; pytest tests/ && git ci -m \"`echo $s`\" pyproject.toml `find -name \"version.txt\"`; git tag -f `poetry version -s` -m \"$(echo $s)\" #com tag Facility with make Use make to easy various commands. $ curl https://pastebin.com/raw/eTHpL70G -o Makefile # or $ curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/Makefile -o Makefile # last version Makefile help $ make help New prerelease with Makefile $ git co dev $ git merge --no-ff [branch] --autostash $ make prerelease New release with Makefile $ git co dev $ make release Checking lint $ make lint Run tox over make $ make tox Github Workflows Actions (GWA) First create the directory for GWA: mkdir -pv .github/workflows This Models: GitHub WorkFlow with tags Running tox; Build pack; Create release; publish TestPyPI and PyPI curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/gwa-flow.yml -o .github/workflows/gwa-flow.yml Run tox and generate coverage report: curl https://raw.githubuserconcurl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/tests_ci_cd.yaml -o .github/workflows/tests_ci_cd.yml Publish manualy releases/prereleases into test.pypi.org with poetry: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-testpypi-manual-publish.yml -o .github/workflows/poetry-testpypi-manual-publish.yml Publish automatically releases into pypi.org and test.pypi.org with poetry, after pass on tests from tests_ci_cd: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-mine-publish-automatically.yml -o .github/workflows/poetry-mine-publish-automatically.yml Publish automatically releases into pypi.org only, after pass on tests from tests_ci_cd: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-mine-pypi-autopublish.yml -o .github/workflows/poetry-mine-pypi-autopublish.yml Publish automatically releases into pypi.org and test.pypi.org without poetry, after pass on tests from tests_ci_cd: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/publish-automatically.yml -o .github/workflows/publish-automatically.yml Publish automatically releases into pypi.org and test.pypi.org with multiprocess poetry, after pass on tests from tests_ci_cd: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-multiprocess.yml -o .github/workflows/poetry-multiprocess.yml Git Hooks create .git-hooks folder into your project root directory, at the same level you already have .git folder; mkdir .git-hooks create hook files into this folder: pre-commit, prepare-commit-msg and all hooks (these files don't have an extension); put the correct code into each file (I will add them below these steps); curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/pre-commit -o .git-hooks/pre-commit curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/prepare-commit-msg -o .git-hooks/prepare-commit-msg curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/commit-msg -o .git-hooks/commit-msg curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/pre-push -o .git-hooks/pre-push change to execute mode; chmod +x .git-hooks/* run this command in your command line, into your main folder of your project (one level up from .git-hooks): git config core.hooksPath .git-hooks; READY;","title":"Usage"},{"location":"user_guide/usage/#coding-dojo","text":"Details for scope and tool .","title":"Coding Dojo"},{"location":"user_guide/usage/#start-use-the-model","text":"Access https://github.com/incolume-treinamentos/incolume.py.model-2023-07-05. Click on green button Use this template ; Bellow click on Create a new repository ; Fill the fields as you wish; finish the create a github project on github.com; Clone the project, on local host; Create the control's branches: bash $ git br main $ git br tags Configure environment: shell $ poetry env use 3.10 $ poetry install $ poetry run task setup Change configuration: Set a new project name and version: ```bash $ vim pyproject.toml [tool.poetry] name = \"incolume-py-model-2023-07-05\" version = 1.111.0 shell $ cat pyproject.toml [tool.poetry] name = \"incolume.py.abc\" version = 0.1.0 ``` rename path project: bash git mv incolume/py/model_2023_07_05/ incolume/py/abc Commit changes shell # the way wished $ git co -b enhancement/epoch#$(date +%s); $ git ci -m 'chore: #0 Atualiza\u00e7\u00e3o do projeto.' $ git co dev $ git merge --no-ff enhancement/epoch#0000000000000 $ poetry run task preminor $ poetry run task patch shell # easy way git ci -m 'chore: #0 Atualiza\u00e7\u00e3o do projeto.' poetry run task preminor poetry run task patch Commit changes","title":"Start Use the model"},{"location":"user_guide/usage/#tests-linters-and-checkers","text":"For run tests: shell $ poetry run pytest # run all shell $ poetry run pytest -vv tests/test_skell.py::TestSkellCase::test_kwargs # run one $ poetry run pytest -vv tests/test_skell.py::TestSkellCase # run class $ poetry run pytest -vv tests/test_skell.py # run file For run linters: shell $ poetry run task linter === Configure pylint tool Edit pyproject.toml , add on end file. ```bash ... [tool.pylint.format] # Maximum number of characters on a single line. max-line-length = 160 [tool.pylint.basic] # Allow shorter and longer variable names than the default. argument-rgx = \"[a-z_][a-z0-9_] $\" attr-rgx = \"[a-z_][a-z0-9_] $\" variable-rgx = \"[a-z_][a-z0-9_]*$\" # Ensure that orjson is analysed as a C extension by pylint. extension-pkg-whitelist = \"orjson\" [tool.pylint.messages_control] disable = [ # Disable too many and too few checks. \"too-many-ancestors\", \"too-many-arguments\", \"too-many-boolean-expressions\", \"too-many-branches\", \"too-many-function-args\", \"too-many-instance-attributes\", \"too-many-lines\", \"too-many-locals\", \"too-many-nested-blocks\", \"too-many-public-methods\", \"too-many-return-statements\", \"too-many-statements\", \"too-few-public-methods\", # Similar lines in files (often the case in tests). \"duplicate-code\", # Many functions (e.g. callbacks) will naturally have unused arguments. \"unused-argument\", # Disable checking that method could be a function in classes (often used for organisation). \"no-self-use\", # Disable failure for TODO items in the codebase (code will always have TODOs). \"fixme\", # Disable docstrings checks as we don't require excessive documentation. \"missing-docstring\", \"no-member\", \"unspecified-encoding\", ] 2. Commit bash $ git ci -m \"Configure pylint tool\" pyproject.toml 4. Configure mypy tool 1. Edit _pyproject.toml_, add on end file. bash ... [tool.mypy] mypy_path = \"incolumepy\" check_untyped_defs = true disallow_any_generics = true ignore_missing_imports = true no_implicit_optional = true show_error_codes = true strict_equality = true warn_redundant_casts = true warn_return_any = true warn_unreachable = true warn_unused_configs = true no_implicit_reexport = true 2. Commit bash $ git ci -m \"Configure mypy tool\" pyproject.toml 5. Configure isort tool 1. Edit _pyproject.toml_, add on end file. bash ... [tool.isort] multi_line_output = 3 line_length = 160 include_trailing_comma = true 2. Commit bash $ git ci -m \"Configure isort tool\" pyproject.toml 6. Configure flake8 tool 1. Edit _pyproject.toml_, add on end file. bash ... [flake8] max-line-length = 160 2. Commit bash $ git ci -m \"Configure flake8 tool\" pyproject.toml 7. Configure black tool: 1. Edit _pyproject.toml_, add on end file. bash ... [tool.black] line_length = 160 2. Commit bash $ git ci -m \"Configure black tool\" pyproject.toml 8. Configure tox tool: 1. Edit _pyproject.toml_, add on end file. bash [tool.tox] legacy_tox_ini = \"\"\" [tox] minversion = 3.3.0 isolated_build = True envlist = black flake8 isort mypy pydocstyle pylint py{36,37,38,39,310} ;[tox:.package] ;basepython = python3 [testenv] whitelist_externals = poetry skip_install = true commands = poetry env use {envpython} poetry install -vv --no-root poetry run pytest {posargs} tests/ [testenv:flake8] deps = flake8 commands = flake8 --config pyproject.toml incolumepy/ tests/ [testenv:mypy] deps = mypy types-toml commands = mypy incolumepy/ [testenv:pydocstyle] commands = poetry run pydocstyle incolumepy/ tests/ [testenv:isort] commands = poetry run isort --check --atomic --py all incolumepy/ tests/ [testenv:pylint] commands = poetry run pylint incolumepy/ tests/ [testenv:black] commands = poetry run black --check incolumepy/ tests/ \"\"\" ``` 2. Commit ```bash $ git ci -m \"Configure tox tool\" pyproject.toml ```","title":"Tests, Linters and Checkers"},{"location":"user_guide/usage/#testting-lint-configurate","text":"Test pydocstyle: bash $ pydocstyle incolumepy/ tests/ Test pylint bash $ pylint incolumepy/ tests/ Test mypy bash $ mypy incolumepy/ tests/ Test isort bash $ isort --check incolumepy/ tests/ Test flake8 bash $ flake8 --config pyproject.toml incolumepy/ tests/ Test black bash $ black --check incolumepy/ tests/","title":"Testting lint configurate"},{"location":"user_guide/usage/#testting-tox-configurate","text":"Text tox bash $ tox","title":"Testting tox configurate"},{"location":"user_guide/usage/#control-version-with-poetry","text":"Unlike bumpversion, poetry changes the version of the main file only. To work around this situation and update the version of pyproject.toml, init .py and version.txt, we will do the following procedure. $ cat > incolumepy/gwa/__init__.py << eof import toml from pathlib import Path __root__ = Path(__file__).parents[0] version_file = __root__.joinpath('version.txt') version_file.write_text(f\"{toml.load(Path(__file__).parents[2].joinpath('pyproject.toml'))['tool']['poetry']['version']}\\n\") __version__ = version_file.read_text().strip() eof $ v=`poetry version prerelease`; pytest tests/ && git ci -m \"$v\" pyproject.toml $(find -name \"version.txt\") #sem tag $ s=`poetry version patch`; pytest tests/ && git ci -m \"`echo $s`\" pyproject.toml `find -name \"version.txt\"`; git tag -f `poetry version -s` -m \"$(echo $s)\" #com tag","title":"Control version with poetry"},{"location":"user_guide/usage/#facility-with-make","text":"Use make to easy various commands. $ curl https://pastebin.com/raw/eTHpL70G -o Makefile # or $ curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/Makefile -o Makefile # last version","title":"Facility with make"},{"location":"user_guide/usage/#makefile-help","text":"$ make help","title":"Makefile help"},{"location":"user_guide/usage/#new-prerelease-with-makefile","text":"$ git co dev $ git merge --no-ff [branch] --autostash $ make prerelease","title":"New prerelease with Makefile"},{"location":"user_guide/usage/#new-release-with-makefile","text":"$ git co dev $ make release","title":"New release with Makefile"},{"location":"user_guide/usage/#checking-lint","text":"$ make lint","title":"Checking lint"},{"location":"user_guide/usage/#run-tox-over-make","text":"$ make tox","title":"Run tox over make"},{"location":"user_guide/usage/#github-workflows-actions-gwa","text":"First create the directory for GWA: mkdir -pv .github/workflows","title":"Github Workflows Actions (GWA)"},{"location":"user_guide/usage/#this-models","text":"GitHub WorkFlow with tags Running tox; Build pack; Create release; publish TestPyPI and PyPI curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/gwa-flow.yml -o .github/workflows/gwa-flow.yml Run tox and generate coverage report: curl https://raw.githubuserconcurl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/tests_ci_cd.yaml -o .github/workflows/tests_ci_cd.yml Publish manualy releases/prereleases into test.pypi.org with poetry: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-testpypi-manual-publish.yml -o .github/workflows/poetry-testpypi-manual-publish.yml Publish automatically releases into pypi.org and test.pypi.org with poetry, after pass on tests from tests_ci_cd: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-mine-publish-automatically.yml -o .github/workflows/poetry-mine-publish-automatically.yml Publish automatically releases into pypi.org only, after pass on tests from tests_ci_cd: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-mine-pypi-autopublish.yml -o .github/workflows/poetry-mine-pypi-autopublish.yml Publish automatically releases into pypi.org and test.pypi.org without poetry, after pass on tests from tests_ci_cd: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/publish-automatically.yml -o .github/workflows/publish-automatically.yml Publish automatically releases into pypi.org and test.pypi.org with multiprocess poetry, after pass on tests from tests_ci_cd: curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.github/workflows/poetry-multiprocess.yml -o .github/workflows/poetry-multiprocess.yml","title":"This Models:"},{"location":"user_guide/usage/#git-hooks","text":"create .git-hooks folder into your project root directory, at the same level you already have .git folder; mkdir .git-hooks create hook files into this folder: pre-commit, prepare-commit-msg and all hooks (these files don't have an extension); put the correct code into each file (I will add them below these steps); curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/pre-commit -o .git-hooks/pre-commit curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/prepare-commit-msg -o .git-hooks/prepare-commit-msg curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/commit-msg -o .git-hooks/commit-msg curl https://raw.githubusercontent.com/incolumepy-prospections/incolumepy.gwa/main/.git-hooks/pre-push -o .git-hooks/pre-push change to execute mode; chmod +x .git-hooks/* run this command in your command line, into your main folder of your project (one level up from .git-hooks): git config core.hooksPath .git-hooks; READY;","title":"Git Hooks"},{"location":"user_guide/writing-your-docs/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Web documentation over github pages mkdocs gh-deploy --config-file mkdocs.yml --remote-branch webdoc","title":"Writing your docs"},{"location":"user_guide/writing-your-docs/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"user_guide/writing-your-docs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"user_guide/writing-your-docs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"user_guide/writing-your-docs/#web-documentation-over-github-pages","text":"mkdocs gh-deploy --config-file mkdocs.yml --remote-branch webdoc","title":"Web documentation over github pages"},{"location":"user_guide/zenpy/","text":"ZEN do Python PEP 20 Bonito \u00e9 melhor que feio. Expl\u00edcito \u00e9 melhor que impl\u00edcito. Simples \u00e9 melhor que complexo. Complexo \u00e9 melhor do que complicado. Plano \u00e9 melhor do que aninhado. Esparso \u00e9 melhor do que denso. A legibilidade conta. Casos especiais n\u00e3o s\u00e3o especiais o suficiente para quebrar as regras. Embora a praticidade supere a pureza. Os erros nunca devem passar silenciosamente. A menos que explicitamente silenciado. Diante da ambiguidade, recuse a tenta\u00e7\u00e3o de adivinhar. Deve haver uma - e de prefer\u00eancia apenas uma - maneira \u00f3bvia de fazer isso. Embora essa maneira possa n\u00e3o ser \u00f3bvia no in\u00edcio, a menos que voc\u00ea seja holand\u00eas. Agora \u00e9 melhor do que nunca. Embora nunca seja melhor do que agora . Se a implementa\u00e7\u00e3o \u00e9 dif\u00edcil de explicar, \u00e9 uma m\u00e1 ideia. Se a implementa\u00e7\u00e3o for f\u00e1cil de explicar, pode ser uma boa ideia. Namespaces s\u00e3o uma \u00f3tima ideia -- vamos fazer mais desses!","title":"ZEN do Python"},{"location":"user_guide/zenpy/#zen-do-python","text":"PEP 20 Bonito \u00e9 melhor que feio. Expl\u00edcito \u00e9 melhor que impl\u00edcito. Simples \u00e9 melhor que complexo. Complexo \u00e9 melhor do que complicado. Plano \u00e9 melhor do que aninhado. Esparso \u00e9 melhor do que denso. A legibilidade conta. Casos especiais n\u00e3o s\u00e3o especiais o suficiente para quebrar as regras. Embora a praticidade supere a pureza. Os erros nunca devem passar silenciosamente. A menos que explicitamente silenciado. Diante da ambiguidade, recuse a tenta\u00e7\u00e3o de adivinhar. Deve haver uma - e de prefer\u00eancia apenas uma - maneira \u00f3bvia de fazer isso. Embora essa maneira possa n\u00e3o ser \u00f3bvia no in\u00edcio, a menos que voc\u00ea seja holand\u00eas. Agora \u00e9 melhor do que nunca. Embora nunca seja melhor do que agora . Se a implementa\u00e7\u00e3o \u00e9 dif\u00edcil de explicar, \u00e9 uma m\u00e1 ideia. Se a implementa\u00e7\u00e3o for f\u00e1cil de explicar, pode ser uma boa ideia. Namespaces s\u00e3o uma \u00f3tima ideia -- vamos fazer mais desses!","title":"ZEN do Python"}]}